{"version":3,"file":"component---src-pages-product-device-software-tsx-1669abeeb2e968962b22.js","mappings":"4MAAA,EAAe,IAA0B,wDCAzC,EAAe,IAA0B,qDCAzC,EAAe,IAA0B,mD,uCCgFzC,EAxE8C,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,SAAmC,IAAzBC,WAAAA,OAAyB,SAC5EC,GAAMC,EAAAA,EAAAA,QAAyB,MAC/BC,GAAaD,EAAAA,EAAAA,QAAuB,MA6D1C,OA3DAE,EAAAA,EAAAA,YAAU,WACR,GAAKH,EAAII,QAAT,CAEA,IAAMC,EAAeL,EAAII,QACzBC,EAAaC,iBAAiB,WAAW,kBAAMD,EAAaE,WAE5DF,EAAaG,aAAe,IAE5B,IAAIC,GAAQ,EAENC,EAAmB,IAAIC,sBAC3B,SAACC,GACKA,EAAQ,GAAGC,gBAAkBR,EAAaS,QAAUL,IACtDA,GAAQ,EACHJ,EAAaU,UAGtB,CACEC,WAAY,qBACZC,UAAW,KAGfP,EAAiBQ,QAAQb,GAEzB,IAAMc,EAAiB,IAAIR,sBACzB,SAACC,GACMA,EAAQ,GAAGC,iBACTR,EAAaE,QAClBF,EAAae,YAAc,EAC3BX,GAAQ,KAGZ,CACEO,WAAY,MACZC,UAAW,IAGXlB,GAAYoB,EAAeD,QAAQb,GAEvC,IAEMgB,EAAmB,WACvB,GAAKnB,EAAWE,QAAhB,CACA,IAEMkB,EAAyC,IAF9BC,EAAAA,EAAAA,IAAoBrB,EAAWE,SAER,IANxB,GAQhBC,EAAamB,MAAMC,UAAnB,cAA6CH,EAA7C,QAKF,OAFAI,OAAOpB,iBAAiB,SAAUe,GAE3B,WACLX,EAAiBiB,aACb5B,GAAYoB,EAAeQ,aAC/BD,OAAOE,oBAAoB,SAAUP,OAEtC,CAACrB,EAAII,WAGN,gBAAKJ,IAAKE,IACR,kBAAOF,IAAKA,EAAK6B,OAAK,EAACC,UAAQ,EAACC,aAAW,EAACC,uBAAqB,IAC/D,mBAAQC,IAAKnC,EAAUoC,KAAK,iB,kOCxD7B,SAASC,IACd,OACE,SAAC,IAAD,CACEC,MAAM,+CACNC,YAAY,kIAEZ,SAACC,EAAA,EAAD,CACEF,MAAM,sBACNG,SAAS,kBACTC,KAAKA,EAAAA,EAAAA,KAAF,cACaC,EAAAA,GAAAA,SADb,WAKL,SAACC,EAAA,EAAD,CACEF,IAAG,IAIH,SAACG,EAAA,EAAD,CACEH,IAAG,IAKH,cAAGA,IAAKI,EAAAA,IAAR,wDACA,SAAC,IAAD,QAGF,SAACC,EAAA,EAAD,CAAWC,mBAAoB,GAAIC,MAAOC,EAAQC,MAAO,KAAMC,OAAQ,QAEzE,SAACR,EAAA,EAAD,CAASS,UAAQ,IACf,eAAIC,UAAU,MAAd,+BAEA,SAACT,EAAA,EAAD,MACE,sVAQF,SAACU,EAAA,GAAD,OAEA,SAACC,EAAA,EAAD,CACEC,qBAAqB,OACrBC,cAAc,SAAC,EAAD,CAAe1D,SAAU2D,IACvCjB,IAAKI,EAAAA,GACLc,kBAAmB,IACnBC,mBAAoB,MALtB,8OAaF,SAACjB,EAAA,EAAD,CACEF,KAAKA,EAAAA,EAAAA,KAAF,oBACmBC,EAAAA,GAAAA,SADnB,UAIH,SAACa,EAAA,EAAD,CAAYE,aAAcI,EAASF,kBAAmB,IAAKC,mBAAoB,MAC7E,eAAIP,UAAU,MAAd,mBADF,sRAQF,SAACV,EAAA,EAAD,MACE,SAACY,EAAA,EAAD,CACEC,qBAAqB,OACrBC,aAAcK,EAAAA,EACdrB,IAAKI,EAAAA,GACLc,kBAAmB,IACnBC,mBAAoB,OAEpB,eAAIP,UAAU,MAAd,cAPF,qDAQmD,cAAGU,KAAK,wBAAR,gBARnD,kBASM,cAAGA,KAAK,yBAAR,iBATN,UAUM,cAAGA,KAAK,kCAAR,aAVN,4EAiBR,S,qBC3GA,IAAe,IAA0B","sources":["webpack://toit.io/./src/assets/images/code-toit.png","webpack://toit.io/./src/assets/images/illustrations/blocks.mp4","webpack://toit.io/./src/assets/images/illustrations/chip.svg","webpack://toit.io/./src/components/VideoAutoPlay.tsx","webpack://toit.io/./src/pages/product/device-software.tsx","webpack://toit.io/./src/assets/images/illustrations/symbols.svg"],"sourcesContent":["export default __webpack_public_path__ + \"static/code-toit-ed3089dce7507c5de105344598c6fc33.png\";","export default __webpack_public_path__ + \"static/blocks-dd00f5dbb70a27af543314b99554933d.mp4\";","export default __webpack_public_path__ + \"static/chip-e4ce030bdea3996fa7ad44ff63d88e52.svg\";","import React, { useEffect, useRef } from \"react\";\nimport { getViewportPosition } from \"../helper\";\n\nexport type Props = {\n  videoUrl: string;\n  autoRewind?: boolean;\n};\n\nexport const VideoAutoPlay: React.FC<Props> = ({ videoUrl, autoRewind = false }) => {\n  const ref = useRef<HTMLVideoElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const videoElement = ref.current;\n    videoElement.addEventListener(\"canplay\", () => videoElement.pause());\n\n    videoElement.playbackRate = 1.5;\n\n    let reset = true;\n\n    const autoPlayObserver = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && videoElement.paused && reset) {\n          reset = false;\n          void videoElement.play();\n        }\n      },\n      {\n        rootMargin: \"0px 0px -100px 0px\",\n        threshold: 0.9,\n      }\n    );\n    autoPlayObserver.observe(videoElement);\n\n    const rewindObserver = new IntersectionObserver(\n      (entries) => {\n        if (!entries[0].isIntersecting) {\n          void videoElement.pause();\n          videoElement.currentTime = 0;\n          reset = true;\n        }\n      },\n      {\n        rootMargin: \"0px\",\n        threshold: 0.0,\n      }\n    );\n    if (autoRewind) rewindObserver.observe(videoElement);\n\n    const maxOffset = 20;\n\n    const positionCallback = () => {\n      if (!wrapperRef.current) return;\n      const position = getViewportPosition(wrapperRef.current);\n\n      const offset = maxOffset * ((position - 0.5) * 2);\n\n      videoElement.style.transform = `translateY(${offset}px)`;\n    };\n\n    window.addEventListener(\"scroll\", positionCallback);\n\n    return () => {\n      autoPlayObserver.disconnect();\n      if (autoRewind) rewindObserver.disconnect();\n      window.removeEventListener(\"scroll\", positionCallback);\n    };\n  }, [ref.current]);\n\n  return (\n    <div ref={wrapperRef}>\n      <video ref={ref} muted autoPlay playsInline disableRemotePlayback>\n        <source src={videoUrl} type=\"video/mp4\" />\n      </video>\n    </div>\n  );\n};\n\nexport default VideoAutoPlay;\n","import { css } from \"@emotion/react\";\nimport React from \"react\";\nimport editor from \"../../assets/images/code-toit.png\";\nimport blocksVideo from \"../../assets/images/illustrations/blocks.mp4\";\nimport chipSvg from \"../../assets/images/illustrations/chip.svg\";\nimport symbolsSvg from \"../../assets/images/illustrations/symbols.svg\";\nimport ContentSpacer from \"../../components/ContentSpacer\";\nimport HeroImage from \"../../components/HeroImage\";\nimport VideoAutoPlay from \"../../components/VideoAutoPlay\";\nimport { bigFont } from \"../../components/global-css\";\nimport Layout from \"../../components/layout\";\nimport CenteredBlock from \"../../components/layout/CenteredBlock\";\nimport PageTitle from \"../../components/layout/PageTitle\";\nimport Section from \"../../components/layout/Section\";\nimport SideBySide from \"../../components/layout/SideBySide\";\nimport SignUpButton from \"../../components/sign-up-button\";\nimport { pythonSecondary } from \"../../theme\";\n\nexport function DevicePage(): JSX.Element {\n  return (\n    <Layout\n      title=\"High-level programming language on the ESP32\"\n      description=\"Code your apps for the ESP32 in the Toit language. Better performance than MicroPython. More robust and easier to use than C.\"\n    >\n      <PageTitle\n        title=\"High-level language\"\n        subTitle=\"Device software\"\n        css={css`\n          background: ${pythonSecondary.string()};\n        `}\n      />\n\n      <Section\n        css={css`\n          padding: 4.5rem 0 0;\n        `}\n      >\n        <CenteredBlock\n          css={css`\n            padding-left: var(--contentPadding);\n            padding-right: var(--contentPadding);\n          `}\n        >\n          <p css={bigFont}>Toit applications are written in the Toit language.</p>\n          <SignUpButton />\n        </CenteredBlock>\n\n        <HeroImage containerHeightRem={18} image={editor} width={1024} height={602} />\n      </Section>\n      <Section centered>\n        <h2 className=\"h1\">Why create a new language?</h2>\n\n        <CenteredBlock>\n          <p>\n            Existing languages that can be used on microcontrollers are not very good. C has great performance but\n            it&apos;s hard to learn, risky to use and even simple functionality takes a long time to build. MicroPython\n            is easy to write but performance is so poor that it&apos;s hardly usable. Oh, and it doesn&apos;t really\n            work like Python.\n          </p>\n        </CenteredBlock>\n\n        <ContentSpacer />\n\n        <SideBySide\n          illustrationPosition=\"left\"\n          illustration={<VideoAutoPlay videoUrl={blocksVideo} />}\n          css={bigFont}\n          illustrationWidth={962}\n          illustrationHeight={1180}\n        >\n          Toit language is a high-level language that&apos;s made to have a syntax very close to Python. As it&apos;s\n          built from first principles for microcontrollers, it&apos;s at least 20x faster than MicroPython. We&apos;ve\n          also built a slick IDE integration.\n        </SideBySide>\n      </Section>\n\n      <Section\n        css={css`\n          background-color: ${pythonSecondary.string()};\n        `}\n      >\n        <SideBySide illustration={chipSvg} illustrationWidth={663} illustrationHeight={449}>\n          <h2 className=\"h1\">Virtual machine</h2>\n          Your code runs as one or more applications inside the Toit virtual machine. The virtual machine creates a\n          sandboxed environment for your code, so the worst that can happen from a bug is your application crashing. The\n          system keeps running and so do your other applications.\n        </SideBySide>\n      </Section>\n\n      <Section>\n        <SideBySide\n          illustrationPosition=\"left\"\n          illustration={symbolsSvg}\n          css={bigFont}\n          illustrationWidth={962}\n          illustrationHeight={1180}\n        >\n          <h2 className=\"h1\">Learn more</h2>\n          Find more information about the Toit language at <a href=\"https://toitlang.org\">toitlang.org</a>, or read\n          the <a href=\"https://docs.toit.io/\">documentation</a>.\n          The <a href=\"https://docs.toit.io/tutorials\">tutorials</a> section is a great place to start and learn\n          how Toit looks and feels.\n        </SideBySide>\n      </Section>\n    </Layout>\n  );\n}\nexport default DevicePage;\n","export default __webpack_public_path__ + \"static/symbols-2225437f48992ec8321def6e1348709a.svg\";"],"names":["videoUrl","autoRewind","ref","useRef","wrapperRef","useEffect","current","videoElement","addEventListener","pause","playbackRate","reset","autoPlayObserver","IntersectionObserver","entries","isIntersecting","paused","play","rootMargin","threshold","observe","rewindObserver","currentTime","positionCallback","offset","getViewportPosition","style","transform","window","disconnect","removeEventListener","muted","autoPlay","playsInline","disableRemotePlayback","src","type","DevicePage","title","description","PageTitle","subTitle","css","pythonSecondary","Section","CenteredBlock","bigFont","HeroImage","containerHeightRem","image","editor","width","height","centered","className","ContentSpacer","SideBySide","illustrationPosition","illustration","blocksVideo","illustrationWidth","illustrationHeight","chipSvg","symbolsSvg","href"],"sourceRoot":""}