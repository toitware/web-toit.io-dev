{"version":3,"file":"a39c196d-a1de1abad9b0d2d61faf.js","mappings":"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","sources":["webpack://toit.io/./src/pages/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport codeSampleSvg from \"../assets/images/code-sample.svg\";\nimport consoleSvg from \"../assets/images/console.svg\";\nimport RobustSandboxingSvg from \"../assets/images/icons/robust-sandboxing.inline.svg\";\nimport SecureCommunicationsSvg from \"../assets/images/icons/secure-communications.inline.svg\";\nimport ArrowLeftSvg from \"../assets/images/illustrations/arrow-left.inline.svg\";\nimport ArrowRightSvg from \"../assets/images/illustrations/arrow-right.inline.svg\";\nimport GreenhouseSvg from \"../assets/images/illustrations/greenhouse.svg\";\nimport KeysSvg from \"../assets/images/illustrations/keys.svg\";\nimport SymbolsSvg from \"../assets/images/illustrations/symbols.svg\";\nimport weatherBalloonMp4 from \"../assets/images/illustrations/weather-balloon.mp4\";\nimport { ButtonLink } from \"../components/button\";\nimport { Link } from \"../components/link\";\nimport ContentSpacer from \"../components/ContentSpacer\";\nimport FeatureBox, { FeaturesContainer } from \"../components/FeatureBox\";\nimport { bigFont, breakpoints, clampBuilder, darkSection } from \"../components/global-css\";\nimport HeroImage from \"../components/HeroImage\";\nimport Layout from \"../components/layout\";\nimport CenteredBlock from \"../components/layout/CenteredBlock\";\nimport PageTitle from \"../components/layout/PageTitle\";\nimport ParagraphHeader from \"../components/layout/ParagraphHeader\";\nimport Section from \"../components/layout/Section\";\nimport SideBySide from \"../components/layout/SideBySide\";\nimport RiveAnimation from \"../components/RiveAnimation\";\nimport TeamsSection from \"../components/sections/teams\";\nimport SignUpButton from \"../components/sign-up-button\";\nimport { black, dartSecondary, golden, white } from \"../theme\";\n\nconst Hero = styled.section`\n  position: relative;\n  background: ${golden.string()};\n  text-align: center;\n  p {\n    display: block;\n    max-width: 22em;\n    margin: 3rem auto;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n`;\n\n// This h2 is posing as h1 for SEO purposes.\nconst H1 = styled.h2`\n  font-size: var(--h1FontSize);\n  display: block;\n  max-width: 16em;\n  margin: 3rem 0;\n`;\n\nexport function IndexPage(): JSX.Element {\n  return (\n    <Layout\n      title=\"Toit - high-level software platform for the ESP32\"\n      rawTitle\n      description=\"Easily deploy high-level code to your ESP32 and run them in containers.\"\n    >\n      <Hero\n        css={css`\n          overflow: hidden;\n        `}\n      >\n        <PageTitle\n          title={<span>High-level code and containers on the ESP32</span>}\n          css={css`\n            border-bottom: 2px solid ${black.string()};\n            h1 {\n              max-width: 12em;\n            }\n          `}\n        />\n        <p css={[bigFont]}>\n          Secure the code on your ESP32 microcontrollers with lightweight containers running on top of our robust{\" \"}\n          <a href=\"https://toitlang.org/\">open source technology</a>.\n        </p>\n        <div\n          css={css`\n            margin-bottom: 1rem;\n          `}\n        >\n          <SignUpButton />\n        </div>\n\n        <p>\n          Built by <Link to=\"/company/about\">the engineers</Link> behind the high-performance virtual machines that\n          power <a href=\"https://www.google.com/chrome/\">Google Chrome</a> and{\" \"}\n          <a href=\"https://flutter.dev/\">Flutter</a>.\n        </p>\n\n        <div\n          css={css`\n            position: relative;\n            height: 0;\n          `}\n        >\n          <ArrowLeftSvg\n            css={css`\n              position: absolute;\n              right: 50%;\n              margin-right: -36rem;\n              bottom: 2rem;\n            `}\n          />\n          <ArrowRightSvg\n            css={css`\n              position: absolute;\n              left: 50%;\n              margin-left: -40rem;\n              bottom: 1rem;\n            `}\n          />\n        </div>\n        <HeroImage image={consoleSvg} width={979} height={662} />\n      </Hero>\n      <Section>\n        <H1\n          css={css`\n            @media (min-width: 600px) {\n              text-align: center;\n              margin-left: auto;\n              margin-right: auto;\n            }\n\n            margin-bottom: ${clampBuilder(\"tiny\", \"large\", 3, 12)};\n          `}\n        >\n          Serviceability for your devices\n        </H1>\n\n        <SideBySide illustration={GreenhouseSvg} illustrationWidth={1505} illustrationHeight={1051}>\n          <p css={bigFont}>\n            Toit comes with robust support for continuously updating the code on your ESP32 microcontrollers even over\n            cellular connections. Devices can be serviced remotely and their firmware, services, and configurations can\n            be maintained over time.\n          </p>\n          <SignUpButton />\n        </SideBySide>\n      </Section>\n      <Section\n        centered\n        css={css`\n          background-color: ${dartSecondary.string()};\n        `}\n      >\n        <h2 className=\"h1\">Connectivity and peripherals</h2>\n\n        <CenteredBlock>\n          <p>\n            Toit supports the ESP32’s built-in WiFi, but we also support the most common external communications\n            modules. Many of our users connect to the cloud via cellular modems using NB-IoT or LTE-M.\n          </p>\n        </CenteredBlock>\n\n        <SideBySide\n          illustrationPosition=\"left\"\n          illustration={\n            <StaticImage\n              placeholder=\"blurred\"\n              src=\"../assets/images/illustrations/bme280.png\"\n              width={1024}\n              height={1024}\n              alt=\"BME 280\"\n            />\n          }\n          illustrationWidth={1024}\n          illustrationHeight={1024}\n        >\n          <p>\n            We let you control any peripheral you plug into your ESP32 through the GPIO pins. You can connect using the\n            I2C, SPI, I2S or UART protocols.\n          </p>\n          <p>\n            Our package manager gives you access to drivers for many commonly used peripherals like sensors and motors,\n            and if you’re missing one, our engineering team is ready to help you write it.\n          </p>\n        </SideBySide>\n      </Section>\n      <TeamsSection />\n      <Section\n        css={[\n          darkSection,\n          css`\n            overflow: hidden;\n          `,\n        ]}\n      >\n        <ParagraphHeader title=\"Fast and safe\" subtitle=\"Modular applications for embedded devices\">\n          Our platform is built on the free and open source <a href=\"https://github.com/toitlang/toit\">Toit language</a>\n          , so you write your applications in a high-level, memory-safe language and let the battery-optimized virtual\n          machine execute them efficiently on your ESP32s. Fast to develop, safe to run.\n        </ParagraphHeader>\n\n        <div\n          css={css`\n            text-align: center;\n          `}\n        >\n          <RiveAnimation\n            width={1200}\n            height={690}\n            src=\"/animations/provision.riv\"\n            css={css`\n              margin-bottom: ${clampBuilder(\"small\", \"huge\", 4.5, 12)};\n              max-width: 60rem;\n              margin-left: auto;\n              margin-right: auto;\n            `}\n          />\n\n          <FeaturesContainer>\n            <FeatureBox title=\"Sandboxed containers\" icon={<RobustSandboxingSvg />} position=\"left\">\n              Your applications run isolated from the system, and each other, on the devices.\n            </FeatureBox>\n            <FeatureBox title=\"Secure communications\" icon={<SecureCommunicationsSvg />} position=\"right\">\n              Send your data to your cloud using HTTPS, MQTT, or CoAP.\n            </FeatureBox>\n          </FeaturesContainer>\n        </div>\n      </Section>\n      <Section>\n        <SideBySide illustration={KeysSvg} illustrationWidth={517} illustrationHeight={651}>\n          <H1>Control your data</H1>\n          <p>\n            You own your data and you get to store it wherever you want. You feed data from your devices directly into\n            your own cloud using HTTPS, MQTT, or CoAP, and the data never passes other servers. It is as simple as that.\n          </p>\n          <p>\n            Deploy code, access logs, update firmware, and install applications on your devices. Let your data flow to\n            your own cloud, share it with your customers. We just handle your microcontrollers.\n          </p>\n        </SideBySide>\n        <ContentSpacer />\n        <SideBySide\n          illustration={\n            <video muted autoPlay loop playsInline width=\"960\" height=\"1320\" disableRemotePlayback>\n              <source src={weatherBalloonMp4} type=\"video/mp4\" />\n            </video>\n          }\n          illustrationPosition=\"left\"\n          illustrationWidth={960}\n          illustrationHeight={1320}\n        >\n          <h2>Risk-free code deployment</h2>\n\n          <p>\n            No matter which bug slips into your code, the worst it can do is crash that one application. The system, as\n            well as all your other applications, keeps running as if nothing had happened. This makes changing and\n            deploying new code risk-free.\n          </p>\n          <p>\n            Treat firmware and drivers as you treat software. Set up a continuous delivery pipeline and deploy new\n            device code on every commit.\n          </p>\n        </SideBySide>\n      </Section>\n      <Section css={darkSection}>\n        <CenteredBlock>\n          <H1>Built for software developers</H1>\n          <p css={bigFont}>\n            If you have ever tried to write code for microcontrollers you know that it’s not a nice experience. You code\n            in C, and a simple code change takes minutes to re-deploy.\n          </p>\n        </CenteredBlock>\n\n        <ContentSpacer preventLine />\n\n        <div\n          css={css`\n            text-align: center;\n            ${breakpoints.medium} {\n              text-align: left;\n              display: flex;\n              align-items: center;\n            }\n          `}\n        >\n          <p\n            css={css`\n              max-width: 20em;\n              margin: 0 auto 3rem;\n              ${breakpoints.medium} {\n                width: 55%;\n                font-family: \"ClashDisplay\", Verdana, sans-serif;\n                font-size: 2.5rem;\n                line-height: 1.5;\n                padding-right: 3rem;\n                margin-bottom: 0;\n              }\n            `}\n          >\n            Toit is a free and open source object-oriented language designed specifically for IoT\n          </p>\n          <img\n            css={css`\n              ${breakpoints.medium} {\n                width: 45%;\n              }\n            `}\n            alt=\"Toit language code sample\"\n            src={codeSampleSvg}\n            width=\"555\"\n            height=\"536\"\n          />\n        </div>\n\n        {/* <Editor\n  editor={\n    'import gpio\\n\\\n\\n\\\nmain:\\n\\\n  pin := gpio.Pin.out 21\\n\\\n  print \"Blinking 5 times ...\"\\n\\\n  5.repeat:\\n\\\n    pin.set 1\\n\\\n    sleep --ms=500\\n\\\n    pin.set 0\\n\\\n    sleep --ms=500\\n\\\n  print \"Blinking done!\"'\n  }\n  terminal={[\n    { Type: \"Input\", Content: \"toit run main.toit\" },\n    { Type: \"Output\", Content: \"<process initiated>\", Time: \"2021-01-26 09:48:19\" },\n    { Type: \"Output\", Content: \"Blinking 5 times ...\", Time: \"2021-01-26 09:48:19\" },\n    { Type: \"Wait\", Wait: 5000 },\n    { Type: \"Output\", Content: \"Blinking done!\", Time: \"2021-01-26 09:48:24\" },\n    { Type: \"Output\", Content: \"<process finished>\", Time: \"2021-01-26 09:48:24\" },\n  ]}\n/> */}\n\n        <ContentSpacer preventLine large />\n\n        <SideBySide\n          illustration={SymbolsSvg}\n          illustrationPosition=\"left\"\n          illustrationWidth={365}\n          illustrationHeight={266}\n        >\n          <p>\n            <strong>Toit is a modern, memory-safe language.</strong> It includes state of the art editor integration\n            including syntax highlighting, goto-definitions, and auto completions.\n          </p>\n\n          <p>\n            Deploying code on your device takes just a second, with no need to flash the device, not minutes like you\n            normally see for microcontrollers.\n          </p>\n\n          <p>\n            <ButtonLink\n              css={css`\n                --buttonColor: ${white.string()};\n                --buttonContrastColor: ${black.string()};\n              `}\n              href=\"https://docs.toit.io/language/language\"\n              variant=\"outlined\"\n            >\n              Learn more <span className=\"link-title\">about the Toit programming language</span>\n            </ButtonLink>\n          </p>\n        </SideBySide>\n      </Section>\n    </Layout>\n  );\n}\nexport default IndexPage;\n"],"names":["Hero","golden","H1","IndexPage","title","rawTitle","description","css","black","bigFont","href","to","image","consoleSvg","width","height","clampBuilder","illustration","GreenhouseSvg","illustrationWidth","illustrationHeight","centered","dartSecondary","className","illustrationPosition","S","placeholder","src","alt","darkSection","subtitle","icon","position","KeysSvg","muted","autoPlay","loop","playsInline","disableRemotePlayback","weatherBalloonMp4","type","preventLine","breakpoints","codeSampleSvg","large","SymbolsSvg","white","variant"],"sourceRoot":""}