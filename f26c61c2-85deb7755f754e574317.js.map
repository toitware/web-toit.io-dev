{"version":3,"file":"f26c61c2-85deb7755f754e574317.js","mappings":"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","sources":["webpack://toit.io/./node_modules/rive-js/dist/rive.dev.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"rive\"] = factory();else root[\"rive\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function () {\n      // webpackBootstrap\n\n      /******/\n      var __webpack_modules__ = [\n        /* 0 */\n      ,\n      /* 1 */\n\n      /***/\n      function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        var __filename = \"/index.js\";\n        var __dirname = \"/\";\n\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n\n\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\n          \"default\": function _default() {\n            return __WEBPACK_DEFAULT_EXPORT__;\n          }\n          /* harmony export */\n\n        });\n\n        var Rive = function () {\n          var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n          if (true) _scriptDir = _scriptDir || __filename;\n          return function (Rive) {\n            Rive = Rive || {};\n            null;\n            var Module = typeof Rive !== \"undefined\" ? Rive : {};\n            var readyPromiseResolve, readyPromiseReject;\n            Module[\"ready\"] = new Promise(function (resolve, reject) {\n              readyPromiseResolve = resolve;\n              readyPromiseReject = reject;\n            });\n\n            function makeMatrix(m2d) {\n              var m = new DOMMatrix();\n              m.a = m2d.xx;\n              m.b = m2d.xy;\n              m.c = m2d.yx;\n              m.d = m2d.yy;\n              m.e = m2d.tx;\n              m.f = m2d.ty;\n              return m;\n            }\n\n            Module.onRuntimeInitialized = function () {\n              var RenderPaintStyle = Module.RenderPaintStyle;\n              var FillRule = Module.FillRule;\n              var RenderPath = Module.RenderPath;\n              var RenderPaint = Module.RenderPaint;\n              var Renderer = Module.Renderer;\n              var StrokeCap = Module.StrokeCap;\n              var StrokeJoin = Module.StrokeJoin;\n              var BlendMode = Module.BlendMode;\n              var fill = RenderPaintStyle.fill;\n              var stroke = RenderPaintStyle.stroke;\n              var evenOdd = FillRule.evenOdd;\n              var nonZero = FillRule.nonZero;\n              var CanvasRenderPath = RenderPath.extend(\"CanvasRenderPath\", {\n                __construct: function __construct() {\n                  this.__parent.__construct.call(this);\n\n                  this._path2D = new Path2D();\n                },\n                reset: function reset() {\n                  this._path2D = new Path2D();\n                },\n                addPath: function addPath(path, m2d) {\n                  this._path2D.addPath(path._path2D, makeMatrix(m2d));\n                },\n                fillRule: function fillRule(_fillRule) {\n                  this._fillRule = _fillRule;\n                },\n                moveTo: function moveTo(x, y) {\n                  this._path2D.moveTo(x, y);\n                },\n                lineTo: function lineTo(x, y) {\n                  this._path2D.lineTo(x, y);\n                },\n                cubicTo: function cubicTo(ox, oy, ix, iy, x, y) {\n                  this._path2D.bezierCurveTo(ox, oy, ix, iy, x, y);\n                },\n                close: function close() {\n                  this._path2D.closePath();\n                }\n              });\n\n              function _colorStyle(value) {\n                return \"rgba(\" + ((16711680 & value) >>> 16) + \",\" + ((65280 & value) >>> 8) + \",\" + ((255 & value) >>> 0) + \",\" + ((4278190080 & value) >>> 24) / 255 + \")\";\n              }\n\n              var CanvasRenderPaint = RenderPaint.extend(\"CanvasRenderPaint\", {\n                color: function color(value) {\n                  this._value = _colorStyle(value);\n                },\n                thickness: function thickness(value) {\n                  this._thickness = value;\n                },\n                join: function join(value) {\n                  switch (value) {\n                    case StrokeJoin.miter:\n                      this._join = \"miter\";\n                      break;\n\n                    case StrokeJoin.round:\n                      this._join = \"round\";\n                      break;\n\n                    case StrokeJoin.bevel:\n                      this._join = \"bevel\";\n                      break;\n                  }\n                },\n                cap: function cap(value) {\n                  switch (value) {\n                    case StrokeCap.butt:\n                      this._cap = \"butt\";\n                      break;\n\n                    case StrokeCap.round:\n                      this._cap = \"round\";\n                      break;\n\n                    case StrokeCap.square:\n                      this._cap = \"square\";\n                      break;\n                  }\n                },\n                style: function style(value) {\n                  this._style = value;\n                },\n                blendMode: function blendMode(value) {\n                  switch (value) {\n                    case BlendMode.srcOver:\n                      this._blend = \"source-over\";\n                      break;\n\n                    case BlendMode.screen:\n                      this._blend = \"screen\";\n                      break;\n\n                    case BlendMode.overlay:\n                      this._blend = \"overlay\";\n                      break;\n\n                    case BlendMode.darken:\n                      this._blend = \"darken\";\n                      break;\n\n                    case BlendMode.lighten:\n                      this._blend = \"lighten\";\n                      break;\n\n                    case BlendMode.colorDodge:\n                      this._blend = \"color-dodge\";\n                      break;\n\n                    case BlendMode.colorBurn:\n                      this._blend = \"color-burn\";\n                      break;\n\n                    case BlendMode.hardLight:\n                      this._blend = \"hard-light\";\n                      break;\n\n                    case BlendMode.softLight:\n                      this._blend = \"soft-light\";\n                      break;\n\n                    case BlendMode.difference:\n                      this._blend = \"difference\";\n                      break;\n\n                    case BlendMode.exclusion:\n                      this._blend = \"exclusion\";\n                      break;\n\n                    case BlendMode.multiply:\n                      this._blend = \"multiply\";\n                      break;\n\n                    case BlendMode.hue:\n                      this._blend = \"hue\";\n                      break;\n\n                    case BlendMode.saturation:\n                      this._blend = \"saturation\";\n                      break;\n\n                    case BlendMode.color:\n                      this._blend = \"color\";\n                      break;\n\n                    case BlendMode.luminosity:\n                      this._blend = \"luminosity\";\n                      break;\n                  }\n                },\n                linearGradient: function linearGradient(sx, sy, ex, ey) {\n                  this._gradient = {\n                    sx: sx,\n                    sy: sy,\n                    ex: ex,\n                    ey: ey,\n                    stops: []\n                  };\n                },\n                radialGradient: function radialGradient(sx, sy, ex, ey) {\n                  this._gradient = {\n                    sx: sx,\n                    sy: sy,\n                    ex: ex,\n                    ey: ey,\n                    stops: [],\n                    isRadial: true\n                  };\n                },\n                addStop: function addStop(color, stop) {\n                  this._gradient.stops.push({\n                    color: color,\n                    stop: stop\n                  });\n                },\n                completeGradient: function completeGradient() {},\n                draw: function draw(ctx, path) {\n                  var _style = this._style;\n                  var _value = this._value;\n                  var _gradient = this._gradient;\n                  var _blend = this._blend;\n                  ctx.globalCompositeOperation = _blend;\n\n                  if (_gradient != null) {\n                    var sx = _gradient.sx;\n                    var sy = _gradient.sy;\n                    var ex = _gradient.ex;\n                    var ey = _gradient.ey;\n                    var stops = _gradient.stops;\n\n                    if (_gradient.isRadial) {\n                      var dx = ex - sx;\n                      var dy = ey - sy;\n                      var radius = Math.sqrt(dx * dx + dy * dy);\n                      _value = ctx.createRadialGradient(sx, sy, 0, sx, sy, radius);\n                    } else {\n                      _value = ctx.createLinearGradient(sx, sy, ex, ey);\n                    }\n\n                    for (var i = 0, l = stops.length; i < l; i++) {\n                      var value = stops[i];\n                      var stop = value.stop;\n                      var color = value.color;\n\n                      _value.addColorStop(stop, _colorStyle(color));\n                    }\n\n                    this._value = _value;\n                    this._gradient = null;\n                  }\n\n                  switch (_style) {\n                    case stroke:\n                      ctx.strokeStyle = _value;\n                      ctx.lineWidth = this._thickness;\n                      ctx.lineCap = this._cap;\n                      ctx.lineJoin = this._join;\n                      ctx.stroke(path._path2D);\n                      break;\n\n                    case fill:\n                      ctx.fillStyle = _value;\n                      ctx.fill(path._path2D, path._fillRule === evenOdd ? \"evenodd\" : \"nonzero\");\n                      break;\n                  }\n                }\n              });\n              Module.CanvasRenderer = Renderer.extend(\"Renderer\", {\n                __construct: function __construct(ctx) {\n                  this.__parent.__construct.call(this);\n\n                  this._ctx = ctx;\n                },\n                save: function save() {\n                  this._ctx.save();\n                },\n                restore: function restore() {\n                  this._ctx.restore();\n                },\n                transform: function transform(matrix) {\n                  this._ctx.transform(matrix.xx, matrix.xy, matrix.yx, matrix.yy, matrix.tx, matrix.ty);\n                },\n                drawPath: function drawPath(path, paint) {\n                  paint.draw(this._ctx, path);\n                },\n                clipPath: function clipPath(path) {\n                  this._ctx.clip(path._path2D, path._fillRule === evenOdd ? \"evenodd\" : \"nonzero\");\n                }\n              });\n              Module.renderFactory = {\n                makeRenderPaint: function makeRenderPaint() {\n                  return new CanvasRenderPaint();\n                },\n                makeRenderPath: function makeRenderPath() {\n                  return new CanvasRenderPath();\n                }\n              };\n            };\n\n            var moduleOverrides = {};\n            var key;\n\n            for (key in Module) {\n              if (Module.hasOwnProperty(key)) {\n                moduleOverrides[key] = Module[key];\n              }\n            }\n\n            var arguments_ = [];\n            var thisProgram = \"./this.program\";\n\n            var quit_ = function quit_(status, toThrow) {\n              throw toThrow;\n            };\n\n            var ENVIRONMENT_IS_WEB = false;\n            var ENVIRONMENT_IS_WORKER = false;\n            var ENVIRONMENT_IS_NODE = false;\n            var ENVIRONMENT_IS_SHELL = false;\n            ENVIRONMENT_IS_WEB = typeof window === \"object\";\n            ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n            ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n            ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n            var scriptDirectory = \"\";\n\n            function locateFile(path) {\n              if (Module[\"locateFile\"]) {\n                return Module[\"locateFile\"](path, scriptDirectory);\n              }\n\n              return scriptDirectory + path;\n            }\n\n            var read_, readAsync, readBinary, setWindowTitle;\n            var nodeFS;\n            var nodePath;\n\n            if (ENVIRONMENT_IS_NODE) {\n              if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = __webpack_require__(2).dirname(scriptDirectory) + \"/\";\n              } else {\n                scriptDirectory = __dirname + \"/\";\n              }\n\n              read_ = function shell_read(filename, binary) {\n                var ret = tryParseAsDataURI(filename);\n\n                if (ret) {\n                  return binary ? ret : ret.toString();\n                }\n\n                if (!nodeFS) nodeFS = __webpack_require__(3);\n                if (!nodePath) nodePath = __webpack_require__(2);\n                filename = nodePath[\"normalize\"](filename);\n                return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n              };\n\n              readBinary = function readBinary(filename) {\n                var ret = read_(filename, true);\n\n                if (!ret.buffer) {\n                  ret = new Uint8Array(ret);\n                }\n\n                assert(ret.buffer);\n                return ret;\n              };\n\n              if (process[\"argv\"].length > 1) {\n                thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n              }\n\n              arguments_ = process[\"argv\"].slice(2);\n              process[\"on\"](\"uncaughtException\", function (ex) {\n                if (!(ex instanceof ExitStatus)) {\n                  throw ex;\n                }\n              });\n              process[\"on\"](\"unhandledRejection\", abort);\n\n              quit_ = function quit_(status) {\n                process[\"exit\"](status);\n              };\n\n              Module[\"inspect\"] = function () {\n                return \"[Emscripten Module object]\";\n              };\n            } else if (ENVIRONMENT_IS_SHELL) {\n              if (typeof read != \"undefined\") {\n                read_ = function shell_read(f) {\n                  var data = tryParseAsDataURI(f);\n\n                  if (data) {\n                    return intArrayToString(data);\n                  }\n\n                  return read(f);\n                };\n              }\n\n              readBinary = function readBinary(f) {\n                var data;\n                data = tryParseAsDataURI(f);\n\n                if (data) {\n                  return data;\n                }\n\n                if (typeof readbuffer === \"function\") {\n                  return new Uint8Array(readbuffer(f));\n                }\n\n                data = read(f, \"binary\");\n                assert(typeof data === \"object\");\n                return data;\n              };\n\n              if (typeof scriptArgs != \"undefined\") {\n                arguments_ = scriptArgs;\n              } else if (typeof arguments != \"undefined\") {\n                arguments_ = arguments;\n              }\n\n              if (typeof quit === \"function\") {\n                quit_ = function quit_(status) {\n                  quit(status);\n                };\n              }\n\n              if (typeof print !== \"undefined\") {\n                if (typeof console === \"undefined\") console = {};\n                console.log = print;\n                console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n              }\n            } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n              if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href;\n              } else if (typeof document !== \"undefined\" && document.currentScript) {\n                scriptDirectory = document.currentScript.src;\n              }\n\n              if (_scriptDir) {\n                scriptDirectory = _scriptDir;\n              }\n\n              if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n              } else {\n                scriptDirectory = \"\";\n              }\n\n              {\n                read_ = function read_(url) {\n                  try {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"GET\", url, false);\n                    xhr.send(null);\n                    return xhr.responseText;\n                  } catch (err) {\n                    var data = tryParseAsDataURI(url);\n\n                    if (data) {\n                      return intArrayToString(data);\n                    }\n\n                    throw err;\n                  }\n                };\n\n                if (ENVIRONMENT_IS_WORKER) {\n                  readBinary = function readBinary(url) {\n                    try {\n                      var xhr = new XMLHttpRequest();\n                      xhr.open(\"GET\", url, false);\n                      xhr.responseType = \"arraybuffer\";\n                      xhr.send(null);\n                      return new Uint8Array(xhr.response);\n                    } catch (err) {\n                      var data = tryParseAsDataURI(url);\n\n                      if (data) {\n                        return data;\n                      }\n\n                      throw err;\n                    }\n                  };\n                }\n\n                readAsync = function readAsync(url, onload, onerror) {\n                  var xhr = new XMLHttpRequest();\n                  xhr.open(\"GET\", url, true);\n                  xhr.responseType = \"arraybuffer\";\n\n                  xhr.onload = function () {\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                      onload(xhr.response);\n                      return;\n                    }\n\n                    var data = tryParseAsDataURI(url);\n\n                    if (data) {\n                      onload(data.buffer);\n                      return;\n                    }\n\n                    onerror();\n                  };\n\n                  xhr.onerror = onerror;\n                  xhr.send(null);\n                };\n              }\n\n              setWindowTitle = function setWindowTitle(title) {\n                document.title = title;\n              };\n            } else {}\n\n            var out = Module[\"print\"] || console.log.bind(console);\n            var err = Module[\"printErr\"] || console.warn.bind(console);\n\n            for (key in moduleOverrides) {\n              if (moduleOverrides.hasOwnProperty(key)) {\n                Module[key] = moduleOverrides[key];\n              }\n            }\n\n            moduleOverrides = null;\n            if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n            if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n            if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n            var tempRet0 = 0;\n\n            var setTempRet0 = function setTempRet0(value) {\n              tempRet0 = value;\n            };\n\n            var wasmBinary;\n            if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n            var noExitRuntime = Module[\"noExitRuntime\"] || true;\n\n            if (typeof WebAssembly !== \"object\") {\n              abort(\"no native wasm support detected\");\n            }\n\n            var wasmMemory;\n            var ABORT = false;\n            var EXITSTATUS;\n\n            function assert(condition, text) {\n              if (!condition) {\n                abort(\"Assertion failed: \" + text);\n              }\n            }\n\n            var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n            function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n              var endIdx = idx + maxBytesToRead;\n              var endPtr = idx;\n\n              while (heap[endPtr] && !(endPtr >= endIdx)) {\n                ++endPtr;\n              }\n\n              if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n                return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n              } else {\n                var str = \"\";\n\n                while (idx < endPtr) {\n                  var u0 = heap[idx++];\n\n                  if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue;\n                  }\n\n                  var u1 = heap[idx++] & 63;\n\n                  if ((u0 & 224) == 192) {\n                    str += String.fromCharCode((u0 & 31) << 6 | u1);\n                    continue;\n                  }\n\n                  var u2 = heap[idx++] & 63;\n\n                  if ((u0 & 240) == 224) {\n                    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n                  } else {\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n                  }\n\n                  if (u0 < 65536) {\n                    str += String.fromCharCode(u0);\n                  } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                  }\n                }\n              }\n\n              return str;\n            }\n\n            function UTF8ToString(ptr, maxBytesToRead) {\n              return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n            }\n\n            function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n              if (!(maxBytesToWrite > 0)) return 0;\n              var startIdx = outIdx;\n              var endIdx = outIdx + maxBytesToWrite - 1;\n\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n\n                if (u >= 55296 && u <= 57343) {\n                  var u1 = str.charCodeAt(++i);\n                  u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n                }\n\n                if (u <= 127) {\n                  if (outIdx >= endIdx) break;\n                  heap[outIdx++] = u;\n                } else if (u <= 2047) {\n                  if (outIdx + 1 >= endIdx) break;\n                  heap[outIdx++] = 192 | u >> 6;\n                  heap[outIdx++] = 128 | u & 63;\n                } else if (u <= 65535) {\n                  if (outIdx + 2 >= endIdx) break;\n                  heap[outIdx++] = 224 | u >> 12;\n                  heap[outIdx++] = 128 | u >> 6 & 63;\n                  heap[outIdx++] = 128 | u & 63;\n                } else {\n                  if (outIdx + 3 >= endIdx) break;\n                  heap[outIdx++] = 240 | u >> 18;\n                  heap[outIdx++] = 128 | u >> 12 & 63;\n                  heap[outIdx++] = 128 | u >> 6 & 63;\n                  heap[outIdx++] = 128 | u & 63;\n                }\n              }\n\n              heap[outIdx] = 0;\n              return outIdx - startIdx;\n            }\n\n            function stringToUTF8(str, outPtr, maxBytesToWrite) {\n              return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n            }\n\n            function lengthBytesUTF8(str) {\n              var len = 0;\n\n              for (var i = 0; i < str.length; ++i) {\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n              }\n\n              return len;\n            }\n\n            var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n            function UTF16ToString(ptr, maxBytesToRead) {\n              var endPtr = ptr;\n              var idx = endPtr >> 1;\n              var maxIdx = idx + maxBytesToRead / 2;\n\n              while (!(idx >= maxIdx) && HEAPU16[idx]) {\n                ++idx;\n              }\n\n              endPtr = idx << 1;\n\n              if (endPtr - ptr > 32 && UTF16Decoder) {\n                return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n              } else {\n                var str = \"\";\n\n                for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n                  var codeUnit = HEAP16[ptr + i * 2 >> 1];\n                  if (codeUnit == 0) break;\n                  str += String.fromCharCode(codeUnit);\n                }\n\n                return str;\n              }\n            }\n\n            function stringToUTF16(str, outPtr, maxBytesToWrite) {\n              if (maxBytesToWrite === undefined) {\n                maxBytesToWrite = 2147483647;\n              }\n\n              if (maxBytesToWrite < 2) return 0;\n              maxBytesToWrite -= 2;\n              var startPtr = outPtr;\n              var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n\n              for (var i = 0; i < numCharsToWrite; ++i) {\n                var codeUnit = str.charCodeAt(i);\n                HEAP16[outPtr >> 1] = codeUnit;\n                outPtr += 2;\n              }\n\n              HEAP16[outPtr >> 1] = 0;\n              return outPtr - startPtr;\n            }\n\n            function lengthBytesUTF16(str) {\n              return str.length * 2;\n            }\n\n            function UTF32ToString(ptr, maxBytesToRead) {\n              var i = 0;\n              var str = \"\";\n\n              while (!(i >= maxBytesToRead / 4)) {\n                var utf32 = HEAP32[ptr + i * 4 >> 2];\n                if (utf32 == 0) break;\n                ++i;\n\n                if (utf32 >= 65536) {\n                  var ch = utf32 - 65536;\n                  str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                } else {\n                  str += String.fromCharCode(utf32);\n                }\n              }\n\n              return str;\n            }\n\n            function stringToUTF32(str, outPtr, maxBytesToWrite) {\n              if (maxBytesToWrite === undefined) {\n                maxBytesToWrite = 2147483647;\n              }\n\n              if (maxBytesToWrite < 4) return 0;\n              var startPtr = outPtr;\n              var endPtr = startPtr + maxBytesToWrite - 4;\n\n              for (var i = 0; i < str.length; ++i) {\n                var codeUnit = str.charCodeAt(i);\n\n                if (codeUnit >= 55296 && codeUnit <= 57343) {\n                  var trailSurrogate = str.charCodeAt(++i);\n                  codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n                }\n\n                HEAP32[outPtr >> 2] = codeUnit;\n                outPtr += 4;\n                if (outPtr + 4 > endPtr) break;\n              }\n\n              HEAP32[outPtr >> 2] = 0;\n              return outPtr - startPtr;\n            }\n\n            function lengthBytesUTF32(str) {\n              var len = 0;\n\n              for (var i = 0; i < str.length; ++i) {\n                var codeUnit = str.charCodeAt(i);\n                if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n                len += 4;\n              }\n\n              return len;\n            }\n\n            function alignUp(x, multiple) {\n              if (x % multiple > 0) {\n                x += multiple - x % multiple;\n              }\n\n              return x;\n            }\n\n            var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n            function updateGlobalBufferAndViews(buf) {\n              buffer = buf;\n              Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n              Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n              Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n              Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n              Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n              Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n              Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n              Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n            }\n\n            var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n            var wasmTable;\n            var __ATPRERUN__ = [];\n            var __ATINIT__ = [];\n            var __ATMAIN__ = [];\n            var __ATPOSTRUN__ = [];\n            var runtimeInitialized = false;\n\n            function preRun() {\n              if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n                while (Module[\"preRun\"].length) {\n                  addOnPreRun(Module[\"preRun\"].shift());\n                }\n              }\n\n              callRuntimeCallbacks(__ATPRERUN__);\n            }\n\n            function initRuntime() {\n              runtimeInitialized = true;\n              callRuntimeCallbacks(__ATINIT__);\n            }\n\n            function preMain() {\n              callRuntimeCallbacks(__ATMAIN__);\n            }\n\n            function postRun() {\n              if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n                while (Module[\"postRun\"].length) {\n                  addOnPostRun(Module[\"postRun\"].shift());\n                }\n              }\n\n              callRuntimeCallbacks(__ATPOSTRUN__);\n            }\n\n            function addOnPreRun(cb) {\n              __ATPRERUN__.unshift(cb);\n            }\n\n            function addOnInit(cb) {\n              __ATINIT__.unshift(cb);\n            }\n\n            function addOnPostRun(cb) {\n              __ATPOSTRUN__.unshift(cb);\n            }\n\n            var runDependencies = 0;\n            var runDependencyWatcher = null;\n            var dependenciesFulfilled = null;\n\n            function addRunDependency(id) {\n              runDependencies++;\n\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies);\n              }\n            }\n\n            function removeRunDependency(id) {\n              runDependencies--;\n\n              if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies);\n              }\n\n              if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                  clearInterval(runDependencyWatcher);\n                  runDependencyWatcher = null;\n                }\n\n                if (dependenciesFulfilled) {\n                  var callback = dependenciesFulfilled;\n                  dependenciesFulfilled = null;\n                  callback();\n                }\n              }\n            }\n\n            Module[\"preloadedImages\"] = {};\n            Module[\"preloadedAudios\"] = {};\n\n            function abort(what) {\n              if (Module[\"onAbort\"]) {\n                Module[\"onAbort\"](what);\n              }\n\n              what += \"\";\n              err(what);\n              ABORT = true;\n              EXITSTATUS = 1;\n              what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n              var e = new WebAssembly.RuntimeError(what);\n              readyPromiseReject(e);\n              throw e;\n            }\n\n            function hasPrefix(str, prefix) {\n              return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n            }\n\n            var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n            function isDataURI(filename) {\n              return hasPrefix(filename, dataURIPrefix);\n            }\n\n            var fileURIPrefix = \"file://\";\n\n            function isFileURI(filename) {\n              return hasPrefix(filename, fileURIPrefix);\n            }\n\n            var wasmBinaryFile = \"data:application/octet-stream;base64,\";\n\n            if (!isDataURI(wasmBinaryFile)) {\n              wasmBinaryFile = locateFile(wasmBinaryFile);\n            }\n\n            function getBinary(file) {\n              try {\n                if (file == wasmBinaryFile && wasmBinary) {\n                  return new Uint8Array(wasmBinary);\n                }\n\n                var binary = tryParseAsDataURI(file);\n\n                if (binary) {\n                  return binary;\n                }\n\n                if (readBinary) {\n                  return readBinary(file);\n                } else {\n                  throw \"both async and sync fetching of the wasm failed\";\n                }\n              } catch (err) {\n                abort(err);\n              }\n            }\n\n            function getBinaryPromise() {\n              if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n                  return fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                  }).then(function (response) {\n                    if (!response[\"ok\"]) {\n                      throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                    }\n\n                    return response[\"arrayBuffer\"]();\n                  }).catch(function () {\n                    return getBinary(wasmBinaryFile);\n                  });\n                } else {\n                  if (readAsync) {\n                    return new Promise(function (resolve, reject) {\n                      readAsync(wasmBinaryFile, function (response) {\n                        resolve(new Uint8Array(response));\n                      }, reject);\n                    });\n                  }\n                }\n              }\n\n              return Promise.resolve().then(function () {\n                return getBinary(wasmBinaryFile);\n              });\n            }\n\n            function createWasm() {\n              var info = {\n                \"a\": asmLibraryArg\n              };\n\n              function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                wasmMemory = Module[\"asm\"][\"M\"];\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                wasmTable = Module[\"asm\"][\"O\"];\n                addOnInit(Module[\"asm\"][\"N\"]);\n                removeRunDependency(\"wasm-instantiate\");\n              }\n\n              addRunDependency(\"wasm-instantiate\");\n\n              function receiveInstantiatedSource(output) {\n                receiveInstance(output[\"instance\"]);\n              }\n\n              function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise().then(function (binary) {\n                  var result = WebAssembly.instantiate(binary, info);\n                  return result;\n                }).then(receiver, function (reason) {\n                  err(\"failed to asynchronously prepare wasm: \" + reason);\n                  abort(reason);\n                });\n              }\n\n              function instantiateAsync() {\n                if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n                  return fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                  }).then(function (response) {\n                    var result = WebAssembly.instantiateStreaming(response, info);\n                    return result.then(receiveInstantiatedSource, function (reason) {\n                      err(\"wasm streaming compile failed: \" + reason);\n                      err(\"falling back to ArrayBuffer instantiation\");\n                      return instantiateArrayBuffer(receiveInstantiatedSource);\n                    });\n                  });\n                } else {\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                }\n              }\n\n              if (Module[\"instantiateWasm\"]) {\n                try {\n                  var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n                  return exports;\n                } catch (e) {\n                  err(\"Module.instantiateWasm callback failed with error: \" + e);\n                  return false;\n                }\n              }\n\n              instantiateAsync().catch(readyPromiseReject);\n              return {};\n            }\n\n            function callRuntimeCallbacks(callbacks) {\n              while (callbacks.length > 0) {\n                var callback = callbacks.shift();\n\n                if (typeof callback == \"function\") {\n                  callback(Module);\n                  continue;\n                }\n\n                var func = callback.func;\n\n                if (typeof func === \"number\") {\n                  if (callback.arg === undefined) {\n                    wasmTable.get(func)();\n                  } else {\n                    wasmTable.get(func)(callback.arg);\n                  }\n                } else {\n                  func(callback.arg === undefined ? null : callback.arg);\n                }\n              }\n            }\n\n            var char_0 = 48;\n            var char_9 = 57;\n\n            function makeLegalFunctionName(name) {\n              if (undefined === name) {\n                return \"_unknown\";\n              }\n\n              name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n              var f = name.charCodeAt(0);\n\n              if (f >= char_0 && f <= char_9) {\n                return \"_\" + name;\n              } else {\n                return name;\n              }\n            }\n\n            function createNamedFunction(name, body) {\n              name = makeLegalFunctionName(name);\n              return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n            }\n\n            var emval_free_list = [];\n            var emval_handle_array = [{}, {\n              value: undefined\n            }, {\n              value: null\n            }, {\n              value: true\n            }, {\n              value: false\n            }];\n\n            function count_emval_handles() {\n              var count = 0;\n\n              for (var i = 5; i < emval_handle_array.length; ++i) {\n                if (emval_handle_array[i] !== undefined) {\n                  ++count;\n                }\n              }\n\n              return count;\n            }\n\n            function get_first_emval() {\n              for (var i = 5; i < emval_handle_array.length; ++i) {\n                if (emval_handle_array[i] !== undefined) {\n                  return emval_handle_array[i];\n                }\n              }\n\n              return null;\n            }\n\n            function init_emval() {\n              Module[\"count_emval_handles\"] = count_emval_handles;\n              Module[\"get_first_emval\"] = get_first_emval;\n            }\n\n            function __emval_register(value) {\n              switch (value) {\n                case undefined:\n                  {\n                    return 1;\n                  }\n\n                case null:\n                  {\n                    return 2;\n                  }\n\n                case true:\n                  {\n                    return 3;\n                  }\n\n                case false:\n                  {\n                    return 4;\n                  }\n\n                default:\n                  {\n                    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n                    emval_handle_array[handle] = {\n                      refcount: 1,\n                      value: value\n                    };\n                    return handle;\n                  }\n              }\n            }\n\n            function extendError(baseErrorType, errorName) {\n              var errorClass = createNamedFunction(errorName, function (message) {\n                this.name = errorName;\n                this.message = message;\n                var stack = new Error(message).stack;\n\n                if (stack !== undefined) {\n                  this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n                }\n              });\n              errorClass.prototype = Object.create(baseErrorType.prototype);\n              errorClass.prototype.constructor = errorClass;\n\n              errorClass.prototype.toString = function () {\n                if (this.message === undefined) {\n                  return this.name;\n                } else {\n                  return this.name + \": \" + this.message;\n                }\n              };\n\n              return errorClass;\n            }\n\n            var PureVirtualError = undefined;\n\n            function embind_init_charCodes() {\n              var codes = new Array(256);\n\n              for (var i = 0; i < 256; ++i) {\n                codes[i] = String.fromCharCode(i);\n              }\n\n              embind_charCodes = codes;\n            }\n\n            var embind_charCodes = undefined;\n\n            function readLatin1String(ptr) {\n              var ret = \"\";\n              var c = ptr;\n\n              while (HEAPU8[c]) {\n                ret += embind_charCodes[HEAPU8[c++]];\n              }\n\n              return ret;\n            }\n\n            function getInheritedInstanceCount() {\n              return Object.keys(registeredInstances).length;\n            }\n\n            function getLiveInheritedInstances() {\n              var rv = [];\n\n              for (var k in registeredInstances) {\n                if (registeredInstances.hasOwnProperty(k)) {\n                  rv.push(registeredInstances[k]);\n                }\n              }\n\n              return rv;\n            }\n\n            var deletionQueue = [];\n\n            function flushPendingDeletes() {\n              while (deletionQueue.length) {\n                var obj = deletionQueue.pop();\n                obj.$$.deleteScheduled = false;\n                obj[\"delete\"]();\n              }\n            }\n\n            var delayFunction = undefined;\n\n            function setDelayFunction(fn) {\n              delayFunction = fn;\n\n              if (deletionQueue.length && delayFunction) {\n                delayFunction(flushPendingDeletes);\n              }\n            }\n\n            function init_embind() {\n              Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n              Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n              Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n              Module[\"setDelayFunction\"] = setDelayFunction;\n            }\n\n            var registeredInstances = {};\n            var BindingError = undefined;\n\n            function throwBindingError(message) {\n              throw new BindingError(message);\n            }\n\n            function getBasestPointer(class_, ptr) {\n              if (ptr === undefined) {\n                throwBindingError(\"ptr should not be undefined\");\n              }\n\n              while (class_.baseClass) {\n                ptr = class_.upcast(ptr);\n                class_ = class_.baseClass;\n              }\n\n              return ptr;\n            }\n\n            function registerInheritedInstance(class_, ptr, instance) {\n              ptr = getBasestPointer(class_, ptr);\n\n              if (registeredInstances.hasOwnProperty(ptr)) {\n                throwBindingError(\"Tried to register registered instance: \" + ptr);\n              } else {\n                registeredInstances[ptr] = instance;\n              }\n            }\n\n            function requireHandle(handle) {\n              if (!handle) {\n                throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n              }\n\n              return emval_handle_array[handle].value;\n            }\n\n            var registeredTypes = {};\n\n            function getTypeName(type) {\n              var ptr = ___getTypeName(type);\n\n              var rv = readLatin1String(ptr);\n\n              _free(ptr);\n\n              return rv;\n            }\n\n            function requireRegisteredType(rawType, humanName) {\n              var impl = registeredTypes[rawType];\n\n              if (undefined === impl) {\n                throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n              }\n\n              return impl;\n            }\n\n            function unregisterInheritedInstance(class_, ptr) {\n              ptr = getBasestPointer(class_, ptr);\n\n              if (registeredInstances.hasOwnProperty(ptr)) {\n                delete registeredInstances[ptr];\n              } else {\n                throwBindingError(\"Tried to unregister unregistered instance: \" + ptr);\n              }\n            }\n\n            function detachFinalizer(handle) {}\n\n            var finalizationGroup = false;\n\n            function runDestructor($$) {\n              if ($$.smartPtr) {\n                $$.smartPtrType.rawDestructor($$.smartPtr);\n              } else {\n                $$.ptrType.registeredClass.rawDestructor($$.ptr);\n              }\n            }\n\n            function releaseClassHandle($$) {\n              $$.count.value -= 1;\n              var toDelete = 0 === $$.count.value;\n\n              if (toDelete) {\n                runDestructor($$);\n              }\n            }\n\n            function attachFinalizer(handle) {\n              if (\"undefined\" === typeof FinalizationGroup) {\n                attachFinalizer = function attachFinalizer(handle) {\n                  return handle;\n                };\n\n                return handle;\n              }\n\n              finalizationGroup = new FinalizationGroup(function (iter) {\n                for (var result = iter.next(); !result.done; result = iter.next()) {\n                  var $$ = result.value;\n\n                  if (!$$.ptr) {\n                    console.warn(\"object already deleted: \" + $$.ptr);\n                  } else {\n                    releaseClassHandle($$);\n                  }\n                }\n              });\n\n              attachFinalizer = function attachFinalizer(handle) {\n                finalizationGroup.register(handle, handle.$$, handle.$$);\n                return handle;\n              };\n\n              detachFinalizer = function detachFinalizer(handle) {\n                finalizationGroup.unregister(handle.$$);\n              };\n\n              return attachFinalizer(handle);\n            }\n\n            function __embind_create_inheriting_constructor(constructorName, wrapperType, properties) {\n              constructorName = readLatin1String(constructorName);\n              wrapperType = requireRegisteredType(wrapperType, \"wrapper\");\n              properties = requireHandle(properties);\n              var arraySlice = [].slice;\n              var registeredClass = wrapperType.registeredClass;\n              var wrapperPrototype = registeredClass.instancePrototype;\n              var baseClass = registeredClass.baseClass;\n              var baseClassPrototype = baseClass.instancePrototype;\n              var baseConstructor = registeredClass.baseClass.constructor;\n              var ctor = createNamedFunction(constructorName, function () {\n                registeredClass.baseClass.pureVirtualFunctions.forEach(function (name) {\n                  if (this[name] === baseClassPrototype[name]) {\n                    throw new PureVirtualError(\"Pure virtual function \" + name + \" must be implemented in JavaScript\");\n                  }\n                }.bind(this));\n                Object.defineProperty(this, \"__parent\", {\n                  value: wrapperPrototype\n                });\n                this[\"__construct\"].apply(this, arraySlice.call(arguments));\n              });\n\n              wrapperPrototype[\"__construct\"] = function __construct() {\n                if (this === wrapperPrototype) {\n                  throwBindingError(\"Pass correct 'this' to __construct\");\n                }\n\n                var inner = baseConstructor[\"implement\"].apply(undefined, [this].concat(arraySlice.call(arguments)));\n                detachFinalizer(inner);\n                var $$ = inner.$$;\n                inner[\"notifyOnDestruction\"]();\n                $$.preservePointerOnDelete = true;\n                Object.defineProperties(this, {\n                  $$: {\n                    value: $$\n                  }\n                });\n                attachFinalizer(this);\n                registerInheritedInstance(registeredClass, $$.ptr, this);\n              };\n\n              wrapperPrototype[\"__destruct\"] = function __destruct() {\n                if (this === wrapperPrototype) {\n                  throwBindingError(\"Pass correct 'this' to __destruct\");\n                }\n\n                detachFinalizer(this);\n                unregisterInheritedInstance(registeredClass, this.$$.ptr);\n              };\n\n              ctor.prototype = Object.create(wrapperPrototype);\n\n              for (var p in properties) {\n                ctor.prototype[p] = properties[p];\n              }\n\n              return __emval_register(ctor);\n            }\n\n            var structRegistrations = {};\n\n            function runDestructors(destructors) {\n              while (destructors.length) {\n                var ptr = destructors.pop();\n                var del = destructors.pop();\n                del(ptr);\n              }\n            }\n\n            function simpleReadValueFromPointer(pointer) {\n              return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n            }\n\n            var awaitingDependencies = {};\n            var typeDependencies = {};\n            var InternalError = undefined;\n\n            function throwInternalError(message) {\n              throw new InternalError(message);\n            }\n\n            function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n              myTypes.forEach(function (type) {\n                typeDependencies[type] = dependentTypes;\n              });\n\n              function onComplete(typeConverters) {\n                var myTypeConverters = getTypeConverters(typeConverters);\n\n                if (myTypeConverters.length !== myTypes.length) {\n                  throwInternalError(\"Mismatched type converter count\");\n                }\n\n                for (var i = 0; i < myTypes.length; ++i) {\n                  registerType(myTypes[i], myTypeConverters[i]);\n                }\n              }\n\n              var typeConverters = new Array(dependentTypes.length);\n              var unregisteredTypes = [];\n              var registered = 0;\n              dependentTypes.forEach(function (dt, i) {\n                if (registeredTypes.hasOwnProperty(dt)) {\n                  typeConverters[i] = registeredTypes[dt];\n                } else {\n                  unregisteredTypes.push(dt);\n\n                  if (!awaitingDependencies.hasOwnProperty(dt)) {\n                    awaitingDependencies[dt] = [];\n                  }\n\n                  awaitingDependencies[dt].push(function () {\n                    typeConverters[i] = registeredTypes[dt];\n                    ++registered;\n\n                    if (registered === unregisteredTypes.length) {\n                      onComplete(typeConverters);\n                    }\n                  });\n                }\n              });\n\n              if (0 === unregisteredTypes.length) {\n                onComplete(typeConverters);\n              }\n            }\n\n            function __embind_finalize_value_object(structType) {\n              var reg = structRegistrations[structType];\n              delete structRegistrations[structType];\n              var rawConstructor = reg.rawConstructor;\n              var rawDestructor = reg.rawDestructor;\n              var fieldRecords = reg.fields;\n              var fieldTypes = fieldRecords.map(function (field) {\n                return field.getterReturnType;\n              }).concat(fieldRecords.map(function (field) {\n                return field.setterArgumentType;\n              }));\n              whenDependentTypesAreResolved([structType], fieldTypes, function (fieldTypes) {\n                var fields = {};\n                fieldRecords.forEach(function (field, i) {\n                  var fieldName = field.fieldName;\n                  var getterReturnType = fieldTypes[i];\n                  var getter = field.getter;\n                  var getterContext = field.getterContext;\n                  var setterArgumentType = fieldTypes[i + fieldRecords.length];\n                  var setter = field.setter;\n                  var setterContext = field.setterContext;\n                  fields[fieldName] = {\n                    read: function read(ptr) {\n                      return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n                    },\n                    write: function write(ptr, o) {\n                      var destructors = [];\n                      setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                      runDestructors(destructors);\n                    }\n                  };\n                });\n                return [{\n                  name: reg.name,\n                  \"fromWireType\": function fromWireType(ptr) {\n                    var rv = {};\n\n                    for (var i in fields) {\n                      rv[i] = fields[i].read(ptr);\n                    }\n\n                    rawDestructor(ptr);\n                    return rv;\n                  },\n                  \"toWireType\": function toWireType(destructors, o) {\n                    for (var fieldName in fields) {\n                      if (!(fieldName in o)) {\n                        throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                      }\n                    }\n\n                    var ptr = rawConstructor();\n\n                    for (fieldName in fields) {\n                      fields[fieldName].write(ptr, o[fieldName]);\n                    }\n\n                    if (destructors !== null) {\n                      destructors.push(rawDestructor, ptr);\n                    }\n\n                    return ptr;\n                  },\n                  \"argPackAdvance\": 8,\n                  \"readValueFromPointer\": simpleReadValueFromPointer,\n                  destructorFunction: rawDestructor\n                }];\n              });\n            }\n\n            function getShiftFromSize(size) {\n              switch (size) {\n                case 1:\n                  return 0;\n\n                case 2:\n                  return 1;\n\n                case 4:\n                  return 2;\n\n                case 8:\n                  return 3;\n\n                default:\n                  throw new TypeError(\"Unknown type size: \" + size);\n              }\n            }\n\n            function registerType(rawType, registeredInstance, options) {\n              options = options || {};\n\n              if (!(\"argPackAdvance\" in registeredInstance)) {\n                throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n              }\n\n              var name = registeredInstance.name;\n\n              if (!rawType) {\n                throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n              }\n\n              if (registeredTypes.hasOwnProperty(rawType)) {\n                if (options.ignoreDuplicateRegistrations) {\n                  return;\n                } else {\n                  throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n                }\n              }\n\n              registeredTypes[rawType] = registeredInstance;\n              delete typeDependencies[rawType];\n\n              if (awaitingDependencies.hasOwnProperty(rawType)) {\n                var callbacks = awaitingDependencies[rawType];\n                delete awaitingDependencies[rawType];\n                callbacks.forEach(function (cb) {\n                  cb();\n                });\n              }\n            }\n\n            function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n              var shift = getShiftFromSize(size);\n              name = readLatin1String(name);\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": function fromWireType(wt) {\n                  return !!wt;\n                },\n                \"toWireType\": function toWireType(destructors, o) {\n                  return o ? trueValue : falseValue;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": function readValueFromPointer(pointer) {\n                  var heap;\n\n                  if (size === 1) {\n                    heap = HEAP8;\n                  } else if (size === 2) {\n                    heap = HEAP16;\n                  } else if (size === 4) {\n                    heap = HEAP32;\n                  } else {\n                    throw new TypeError(\"Unknown boolean type size: \" + name);\n                  }\n\n                  return this[\"fromWireType\"](heap[pointer >> shift]);\n                },\n                destructorFunction: null\n              });\n            }\n\n            function ClassHandle_isAliasOf(other) {\n              if (!(this instanceof ClassHandle)) {\n                return false;\n              }\n\n              if (!(other instanceof ClassHandle)) {\n                return false;\n              }\n\n              var leftClass = this.$$.ptrType.registeredClass;\n              var left = this.$$.ptr;\n              var rightClass = other.$$.ptrType.registeredClass;\n              var right = other.$$.ptr;\n\n              while (leftClass.baseClass) {\n                left = leftClass.upcast(left);\n                leftClass = leftClass.baseClass;\n              }\n\n              while (rightClass.baseClass) {\n                right = rightClass.upcast(right);\n                rightClass = rightClass.baseClass;\n              }\n\n              return leftClass === rightClass && left === right;\n            }\n\n            function shallowCopyInternalPointer(o) {\n              return {\n                count: o.count,\n                deleteScheduled: o.deleteScheduled,\n                preservePointerOnDelete: o.preservePointerOnDelete,\n                ptr: o.ptr,\n                ptrType: o.ptrType,\n                smartPtr: o.smartPtr,\n                smartPtrType: o.smartPtrType\n              };\n            }\n\n            function throwInstanceAlreadyDeleted(obj) {\n              function getInstanceTypeName(handle) {\n                return handle.$$.ptrType.registeredClass.name;\n              }\n\n              throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n            }\n\n            function ClassHandle_clone() {\n              if (!this.$$.ptr) {\n                throwInstanceAlreadyDeleted(this);\n              }\n\n              if (this.$$.preservePointerOnDelete) {\n                this.$$.count.value += 1;\n                return this;\n              } else {\n                var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n                  $$: {\n                    value: shallowCopyInternalPointer(this.$$)\n                  }\n                }));\n                clone.$$.count.value += 1;\n                clone.$$.deleteScheduled = false;\n                return clone;\n              }\n            }\n\n            function ClassHandle_delete() {\n              if (!this.$$.ptr) {\n                throwInstanceAlreadyDeleted(this);\n              }\n\n              if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n                throwBindingError(\"Object already scheduled for deletion\");\n              }\n\n              detachFinalizer(this);\n              releaseClassHandle(this.$$);\n\n              if (!this.$$.preservePointerOnDelete) {\n                this.$$.smartPtr = undefined;\n                this.$$.ptr = undefined;\n              }\n            }\n\n            function ClassHandle_isDeleted() {\n              return !this.$$.ptr;\n            }\n\n            function ClassHandle_deleteLater() {\n              if (!this.$$.ptr) {\n                throwInstanceAlreadyDeleted(this);\n              }\n\n              if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n                throwBindingError(\"Object already scheduled for deletion\");\n              }\n\n              deletionQueue.push(this);\n\n              if (deletionQueue.length === 1 && delayFunction) {\n                delayFunction(flushPendingDeletes);\n              }\n\n              this.$$.deleteScheduled = true;\n              return this;\n            }\n\n            function init_ClassHandle() {\n              ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n              ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n              ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n              ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n              ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n            }\n\n            function ClassHandle() {}\n\n            var registeredPointers = {};\n\n            function ensureOverloadTable(proto, methodName, humanName) {\n              if (undefined === proto[methodName].overloadTable) {\n                var prevFunc = proto[methodName];\n\n                proto[methodName] = function () {\n                  if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n                  }\n\n                  return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n                };\n\n                proto[methodName].overloadTable = [];\n                proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n              }\n            }\n\n            function exposePublicSymbol(name, value, numArguments) {\n              if (Module.hasOwnProperty(name)) {\n                if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n                  throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n                }\n\n                ensureOverloadTable(Module, name, name);\n\n                if (Module.hasOwnProperty(numArguments)) {\n                  throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n                }\n\n                Module[name].overloadTable[numArguments] = value;\n              } else {\n                Module[name] = value;\n\n                if (undefined !== numArguments) {\n                  Module[name].numArguments = numArguments;\n                }\n              }\n            }\n\n            function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n              this.name = name;\n              this.constructor = constructor;\n              this.instancePrototype = instancePrototype;\n              this.rawDestructor = rawDestructor;\n              this.baseClass = baseClass;\n              this.getActualType = getActualType;\n              this.upcast = upcast;\n              this.downcast = downcast;\n              this.pureVirtualFunctions = [];\n            }\n\n            function upcastPointer(ptr, ptrClass, desiredClass) {\n              while (ptrClass !== desiredClass) {\n                if (!ptrClass.upcast) {\n                  throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n                }\n\n                ptr = ptrClass.upcast(ptr);\n                ptrClass = ptrClass.baseClass;\n              }\n\n              return ptr;\n            }\n\n            function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n              if (handle === null) {\n                if (this.isReference) {\n                  throwBindingError(\"null is not a valid \" + this.name);\n                }\n\n                return 0;\n              }\n\n              if (!handle.$$) {\n                throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n              }\n\n              if (!handle.$$.ptr) {\n                throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              }\n\n              var handleClass = handle.$$.ptrType.registeredClass;\n              var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n              return ptr;\n            }\n\n            function genericPointerToWireType(destructors, handle) {\n              var ptr;\n\n              if (handle === null) {\n                if (this.isReference) {\n                  throwBindingError(\"null is not a valid \" + this.name);\n                }\n\n                if (this.isSmartPointer) {\n                  ptr = this.rawConstructor();\n\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n\n                  return ptr;\n                } else {\n                  return 0;\n                }\n              }\n\n              if (!handle.$$) {\n                throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n              }\n\n              if (!handle.$$.ptr) {\n                throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              }\n\n              if (!this.isConst && handle.$$.ptrType.isConst) {\n                throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n              }\n\n              var handleClass = handle.$$.ptrType.registeredClass;\n              ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\n              if (this.isSmartPointer) {\n                if (undefined === handle.$$.smartPtr) {\n                  throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n                }\n\n                switch (this.sharingPolicy) {\n                  case 0:\n                    if (handle.$$.smartPtrType === this) {\n                      ptr = handle.$$.smartPtr;\n                    } else {\n                      throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                    }\n\n                    break;\n\n                  case 1:\n                    ptr = handle.$$.smartPtr;\n                    break;\n\n                  case 2:\n                    if (handle.$$.smartPtrType === this) {\n                      ptr = handle.$$.smartPtr;\n                    } else {\n                      var clonedHandle = handle[\"clone\"]();\n                      ptr = this.rawShare(ptr, __emval_register(function () {\n                        clonedHandle[\"delete\"]();\n                      }));\n\n                      if (destructors !== null) {\n                        destructors.push(this.rawDestructor, ptr);\n                      }\n                    }\n\n                    break;\n\n                  default:\n                    throwBindingError(\"Unsupporting sharing policy\");\n                }\n              }\n\n              return ptr;\n            }\n\n            function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n              if (handle === null) {\n                if (this.isReference) {\n                  throwBindingError(\"null is not a valid \" + this.name);\n                }\n\n                return 0;\n              }\n\n              if (!handle.$$) {\n                throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n              }\n\n              if (!handle.$$.ptr) {\n                throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              }\n\n              if (handle.$$.ptrType.isConst) {\n                throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n              }\n\n              var handleClass = handle.$$.ptrType.registeredClass;\n              var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n              return ptr;\n            }\n\n            function RegisteredPointer_getPointee(ptr) {\n              if (this.rawGetPointee) {\n                ptr = this.rawGetPointee(ptr);\n              }\n\n              return ptr;\n            }\n\n            function RegisteredPointer_destructor(ptr) {\n              if (this.rawDestructor) {\n                this.rawDestructor(ptr);\n              }\n            }\n\n            function RegisteredPointer_deleteObject(handle) {\n              if (handle !== null) {\n                handle[\"delete\"]();\n              }\n            }\n\n            function downcastPointer(ptr, ptrClass, desiredClass) {\n              if (ptrClass === desiredClass) {\n                return ptr;\n              }\n\n              if (undefined === desiredClass.baseClass) {\n                return null;\n              }\n\n              var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n\n              if (rv === null) {\n                return null;\n              }\n\n              return desiredClass.downcast(rv);\n            }\n\n            function getInheritedInstance(class_, ptr) {\n              ptr = getBasestPointer(class_, ptr);\n              return registeredInstances[ptr];\n            }\n\n            function makeClassHandle(prototype, record) {\n              if (!record.ptrType || !record.ptr) {\n                throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n              }\n\n              var hasSmartPtrType = !!record.smartPtrType;\n              var hasSmartPtr = !!record.smartPtr;\n\n              if (hasSmartPtrType !== hasSmartPtr) {\n                throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n              }\n\n              record.count = {\n                value: 1\n              };\n              return attachFinalizer(Object.create(prototype, {\n                $$: {\n                  value: record\n                }\n              }));\n            }\n\n            function RegisteredPointer_fromWireType(ptr) {\n              var rawPointer = this.getPointee(ptr);\n\n              if (!rawPointer) {\n                this.destructor(ptr);\n                return null;\n              }\n\n              var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n\n              if (undefined !== registeredInstance) {\n                if (0 === registeredInstance.$$.count.value) {\n                  registeredInstance.$$.ptr = rawPointer;\n                  registeredInstance.$$.smartPtr = ptr;\n                  return registeredInstance[\"clone\"]();\n                } else {\n                  var rv = registeredInstance[\"clone\"]();\n                  this.destructor(ptr);\n                  return rv;\n                }\n              }\n\n              function makeDefaultHandle() {\n                if (this.isSmartPointer) {\n                  return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this.pointeeType,\n                    ptr: rawPointer,\n                    smartPtrType: this,\n                    smartPtr: ptr\n                  });\n                } else {\n                  return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this,\n                    ptr: ptr\n                  });\n                }\n              }\n\n              var actualType = this.registeredClass.getActualType(rawPointer);\n              var registeredPointerRecord = registeredPointers[actualType];\n\n              if (!registeredPointerRecord) {\n                return makeDefaultHandle.call(this);\n              }\n\n              var toType;\n\n              if (this.isConst) {\n                toType = registeredPointerRecord.constPointerType;\n              } else {\n                toType = registeredPointerRecord.pointerType;\n              }\n\n              var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n\n              if (dp === null) {\n                return makeDefaultHandle.call(this);\n              }\n\n              if (this.isSmartPointer) {\n                return makeClassHandle(toType.registeredClass.instancePrototype, {\n                  ptrType: toType,\n                  ptr: dp,\n                  smartPtrType: this,\n                  smartPtr: ptr\n                });\n              } else {\n                return makeClassHandle(toType.registeredClass.instancePrototype, {\n                  ptrType: toType,\n                  ptr: dp\n                });\n              }\n            }\n\n            function init_RegisteredPointer() {\n              RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n              RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n              RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n              RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n              RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n              RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n            }\n\n            function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n              this.name = name;\n              this.registeredClass = registeredClass;\n              this.isReference = isReference;\n              this.isConst = isConst;\n              this.isSmartPointer = isSmartPointer;\n              this.pointeeType = pointeeType;\n              this.sharingPolicy = sharingPolicy;\n              this.rawGetPointee = rawGetPointee;\n              this.rawConstructor = rawConstructor;\n              this.rawShare = rawShare;\n              this.rawDestructor = rawDestructor;\n\n              if (!isSmartPointer && registeredClass.baseClass === undefined) {\n                if (isConst) {\n                  this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n                  this.destructorFunction = null;\n                } else {\n                  this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n                  this.destructorFunction = null;\n                }\n              } else {\n                this[\"toWireType\"] = genericPointerToWireType;\n              }\n            }\n\n            function replacePublicSymbol(name, value, numArguments) {\n              if (!Module.hasOwnProperty(name)) {\n                throwInternalError(\"Replacing nonexistant public symbol\");\n              }\n\n              if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n                Module[name].overloadTable[numArguments] = value;\n              } else {\n                Module[name] = value;\n                Module[name].argCount = numArguments;\n              }\n            }\n\n            function dynCallLegacy(sig, ptr, args) {\n              var f = Module[\"dynCall_\" + sig];\n              return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n            }\n\n            function dynCall(sig, ptr, args) {\n              if (sig.indexOf(\"j\") != -1) {\n                return dynCallLegacy(sig, ptr, args);\n              }\n\n              return wasmTable.get(ptr).apply(null, args);\n            }\n\n            function getDynCaller(sig, ptr) {\n              var argCache = [];\n              return function () {\n                argCache.length = arguments.length;\n\n                for (var i = 0; i < arguments.length; i++) {\n                  argCache[i] = arguments[i];\n                }\n\n                return dynCall(sig, ptr, argCache);\n              };\n            }\n\n            function embind__requireFunction(signature, rawFunction) {\n              signature = readLatin1String(signature);\n\n              function makeDynCaller() {\n                if (signature.indexOf(\"j\") != -1) {\n                  return getDynCaller(signature, rawFunction);\n                }\n\n                return wasmTable.get(rawFunction);\n              }\n\n              var fp = makeDynCaller();\n\n              if (typeof fp !== \"function\") {\n                throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n              }\n\n              return fp;\n            }\n\n            var UnboundTypeError = undefined;\n\n            function throwUnboundTypeError(message, types) {\n              var unboundTypes = [];\n              var seen = {};\n\n              function visit(type) {\n                if (seen[type]) {\n                  return;\n                }\n\n                if (registeredTypes[type]) {\n                  return;\n                }\n\n                if (typeDependencies[type]) {\n                  typeDependencies[type].forEach(visit);\n                  return;\n                }\n\n                unboundTypes.push(type);\n                seen[type] = true;\n              }\n\n              types.forEach(visit);\n              throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n            }\n\n            function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n              name = readLatin1String(name);\n              getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n\n              if (upcast) {\n                upcast = embind__requireFunction(upcastSignature, upcast);\n              }\n\n              if (downcast) {\n                downcast = embind__requireFunction(downcastSignature, downcast);\n              }\n\n              rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n              var legalFunctionName = makeLegalFunctionName(name);\n              exposePublicSymbol(legalFunctionName, function () {\n                throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [baseClassRawType]);\n              });\n              whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {\n                base = base[0];\n                var baseClass;\n                var basePrototype;\n\n                if (baseClassRawType) {\n                  baseClass = base.registeredClass;\n                  basePrototype = baseClass.instancePrototype;\n                } else {\n                  basePrototype = ClassHandle.prototype;\n                }\n\n                var constructor = createNamedFunction(legalFunctionName, function () {\n                  if (Object.getPrototypeOf(this) !== instancePrototype) {\n                    throw new BindingError(\"Use 'new' to construct \" + name);\n                  }\n\n                  if (undefined === registeredClass.constructor_body) {\n                    throw new BindingError(name + \" has no accessible constructor\");\n                  }\n\n                  var body = registeredClass.constructor_body[arguments.length];\n\n                  if (undefined === body) {\n                    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n                  }\n\n                  return body.apply(this, arguments);\n                });\n                var instancePrototype = Object.create(basePrototype, {\n                  constructor: {\n                    value: constructor\n                  }\n                });\n                constructor.prototype = instancePrototype;\n                var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n                var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n                var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n                var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n                registeredPointers[rawType] = {\n                  pointerType: pointerConverter,\n                  constPointerType: constPointerConverter\n                };\n                replacePublicSymbol(legalFunctionName, constructor);\n                return [referenceConverter, pointerConverter, constPointerConverter];\n              });\n            }\n\n            function new_(constructor, argumentList) {\n              if (!(constructor instanceof Function)) {\n                throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n              }\n\n              var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n              dummy.prototype = constructor.prototype;\n              var obj = new dummy();\n              var r = constructor.apply(obj, argumentList);\n              return r instanceof Object ? r : obj;\n            }\n\n            function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n              var argCount = argTypes.length;\n\n              if (argCount < 2) {\n                throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n              }\n\n              var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n              var needsDestructorStack = false;\n\n              for (var i = 1; i < argTypes.length; ++i) {\n                if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n                  needsDestructorStack = true;\n                  break;\n                }\n              }\n\n              var returns = argTypes[0].name !== \"void\";\n              var argsList = \"\";\n              var argsListWired = \"\";\n\n              for (var i = 0; i < argCount - 2; ++i) {\n                argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n                argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n              }\n\n              var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n\n              if (needsDestructorStack) {\n                invokerFnBody += \"var destructors = [];\\n\";\n              }\n\n              var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n              var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n              var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n\n              if (isClassMethodFunc) {\n                invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n              }\n\n              for (var i = 0; i < argCount - 2; ++i) {\n                invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n                args1.push(\"argType\" + i);\n                args2.push(argTypes[i + 2]);\n              }\n\n              if (isClassMethodFunc) {\n                argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n              }\n\n              invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n\n              if (needsDestructorStack) {\n                invokerFnBody += \"runDestructors(destructors);\\n\";\n              } else {\n                for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n                  var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n\n                  if (argTypes[i].destructorFunction !== null) {\n                    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                    args1.push(paramName + \"_dtor\");\n                    args2.push(argTypes[i].destructorFunction);\n                  }\n                }\n              }\n\n              if (returns) {\n                invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n              } else {}\n\n              invokerFnBody += \"}\\n\";\n              args1.push(invokerFnBody);\n              var invokerFunction = new_(Function, args1).apply(null, args2);\n              return invokerFunction;\n            }\n\n            function heap32VectorToArray(count, firstElement) {\n              var array = [];\n\n              for (var i = 0; i < count; i++) {\n                array.push(HEAP32[(firstElement >> 2) + i]);\n              }\n\n              return array;\n            }\n\n            function __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {\n              var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n              methodName = readLatin1String(methodName);\n              rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n              whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + methodName;\n\n                function unboundTypesHandler() {\n                  throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n                }\n\n                var proto = classType.registeredClass.constructor;\n\n                if (undefined === proto[methodName]) {\n                  unboundTypesHandler.argCount = argCount - 1;\n                  proto[methodName] = unboundTypesHandler;\n                } else {\n                  ensureOverloadTable(proto, methodName, humanName);\n                  proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n                }\n\n                whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n                  var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n                  var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);\n\n                  if (undefined === proto[methodName].overloadTable) {\n                    func.argCount = argCount - 1;\n                    proto[methodName] = func;\n                  } else {\n                    proto[methodName].overloadTable[argCount - 1] = func;\n                  }\n\n                  return [];\n                });\n                return [];\n              });\n            }\n\n            function validateThis(this_, classType, humanName) {\n              if (!(this_ instanceof Object)) {\n                throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n              }\n\n              if (!(this_ instanceof classType.registeredClass.constructor)) {\n                throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n              }\n\n              if (!this_.$$.ptr) {\n                throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n              }\n\n              return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n            }\n\n            function __embind_register_class_class_property(rawClassType, fieldName, rawFieldType, rawFieldPtr, getterSignature, getter, setterSignature, setter) {\n              fieldName = readLatin1String(fieldName);\n              getter = embind__requireFunction(getterSignature, getter);\n              whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + fieldName;\n                var desc = {\n                  get: function get() {\n                    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [rawFieldType]);\n                  },\n                  enumerable: true,\n                  configurable: true\n                };\n\n                if (setter) {\n                  desc.set = function () {\n                    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [rawFieldType]);\n                  };\n                } else {\n                  desc.set = function (v) {\n                    throwBindingError(humanName + \" is a read-only property\");\n                  };\n                }\n\n                Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n                whenDependentTypesAreResolved([], [rawFieldType], function (fieldType) {\n                  fieldType = fieldType[0];\n                  var desc = {\n                    get: function get() {\n                      return fieldType[\"fromWireType\"](getter(rawFieldPtr));\n                    },\n                    enumerable: true\n                  };\n\n                  if (setter) {\n                    setter = embind__requireFunction(setterSignature, setter);\n\n                    desc.set = function (v) {\n                      var destructors = [];\n                      setter(rawFieldPtr, fieldType[\"toWireType\"](destructors, v));\n                      runDestructors(destructors);\n                    };\n                  }\n\n                  Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n                  return [];\n                });\n                return [];\n              });\n            }\n\n            function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n              assert(argCount > 0);\n              var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n              invoker = embind__requireFunction(invokerSignature, invoker);\n              var args = [rawConstructor];\n              var destructors = [];\n              whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n                classType = classType[0];\n                var humanName = \"constructor \" + classType.name;\n\n                if (undefined === classType.registeredClass.constructor_body) {\n                  classType.registeredClass.constructor_body = [];\n                }\n\n                if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n                  throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n                }\n\n                classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n                  throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n                };\n\n                whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n                  classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                    if (arguments.length !== argCount - 1) {\n                      throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                    }\n\n                    destructors.length = 0;\n                    args.length = argCount;\n\n                    for (var i = 1; i < argCount; ++i) {\n                      args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                    }\n\n                    var ptr = invoker.apply(null, args);\n                    runDestructors(destructors);\n                    return argTypes[0][\"fromWireType\"](ptr);\n                  };\n\n                  return [];\n                });\n                return [];\n              });\n            }\n\n            function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n              var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n              methodName = readLatin1String(methodName);\n              rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n              whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + methodName;\n\n                if (isPureVirtual) {\n                  classType.registeredClass.pureVirtualFunctions.push(methodName);\n                }\n\n                function unboundTypesHandler() {\n                  throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n                }\n\n                var proto = classType.registeredClass.instancePrototype;\n                var method = proto[methodName];\n\n                if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n                  unboundTypesHandler.argCount = argCount - 2;\n                  unboundTypesHandler.className = classType.name;\n                  proto[methodName] = unboundTypesHandler;\n                } else {\n                  ensureOverloadTable(proto, methodName, humanName);\n                  proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n                }\n\n                whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n                  var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n\n                  if (undefined === proto[methodName].overloadTable) {\n                    memberFunction.argCount = argCount - 2;\n                    proto[methodName] = memberFunction;\n                  } else {\n                    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n                  }\n\n                  return [];\n                });\n                return [];\n              });\n            }\n\n            function __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n              fieldName = readLatin1String(fieldName);\n              getter = embind__requireFunction(getterSignature, getter);\n              whenDependentTypesAreResolved([], [classType], function (classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + fieldName;\n                var desc = {\n                  get: function get() {\n                    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [getterReturnType, setterArgumentType]);\n                  },\n                  enumerable: true,\n                  configurable: true\n                };\n\n                if (setter) {\n                  desc.set = function () {\n                    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [getterReturnType, setterArgumentType]);\n                  };\n                } else {\n                  desc.set = function (v) {\n                    throwBindingError(humanName + \" is a read-only property\");\n                  };\n                }\n\n                Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n                whenDependentTypesAreResolved([], setter ? [getterReturnType, setterArgumentType] : [getterReturnType], function (types) {\n                  var getterReturnType = types[0];\n                  var desc = {\n                    get: function get() {\n                      var ptr = validateThis(this, classType, humanName + \" getter\");\n                      return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n                    },\n                    enumerable: true\n                  };\n\n                  if (setter) {\n                    setter = embind__requireFunction(setterSignature, setter);\n                    var setterArgumentType = types[1];\n\n                    desc.set = function (v) {\n                      var ptr = validateThis(this, classType, humanName + \" setter\");\n                      var destructors = [];\n                      setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n                      runDestructors(destructors);\n                    };\n                  }\n\n                  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n                  return [];\n                });\n                return [];\n              });\n            }\n\n            function __emval_decref(handle) {\n              if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n                emval_handle_array[handle] = undefined;\n                emval_free_list.push(handle);\n              }\n            }\n\n            function __embind_register_emval(rawType, name) {\n              name = readLatin1String(name);\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": function fromWireType(handle) {\n                  var rv = emval_handle_array[handle].value;\n\n                  __emval_decref(handle);\n\n                  return rv;\n                },\n                \"toWireType\": function toWireType(destructors, value) {\n                  return __emval_register(value);\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: null\n              });\n            }\n\n            function enumReadValueFromPointer(name, shift, signed) {\n              switch (shift) {\n                case 0:\n                  return function (pointer) {\n                    var heap = signed ? HEAP8 : HEAPU8;\n                    return this[\"fromWireType\"](heap[pointer]);\n                  };\n\n                case 1:\n                  return function (pointer) {\n                    var heap = signed ? HEAP16 : HEAPU16;\n                    return this[\"fromWireType\"](heap[pointer >> 1]);\n                  };\n\n                case 2:\n                  return function (pointer) {\n                    var heap = signed ? HEAP32 : HEAPU32;\n                    return this[\"fromWireType\"](heap[pointer >> 2]);\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + name);\n              }\n            }\n\n            function __embind_register_enum(rawType, name, size, isSigned) {\n              var shift = getShiftFromSize(size);\n              name = readLatin1String(name);\n\n              function ctor() {}\n\n              ctor.values = {};\n              registerType(rawType, {\n                name: name,\n                constructor: ctor,\n                \"fromWireType\": function fromWireType(c) {\n                  return this.constructor.values[c];\n                },\n                \"toWireType\": function toWireType(destructors, c) {\n                  return c.value;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n                destructorFunction: null\n              });\n              exposePublicSymbol(name, ctor);\n            }\n\n            function __embind_register_enum_value(rawEnumType, name, enumValue) {\n              var enumType = requireRegisteredType(rawEnumType, \"enum\");\n              name = readLatin1String(name);\n              var Enum = enumType.constructor;\n              var Value = Object.create(enumType.constructor.prototype, {\n                value: {\n                  value: enumValue\n                },\n                constructor: {\n                  value: createNamedFunction(enumType.name + \"_\" + name, function () {})\n                }\n              });\n              Enum.values[enumValue] = Value;\n              Enum[name] = Value;\n            }\n\n            function _embind_repr(v) {\n              if (v === null) {\n                return \"null\";\n              }\n\n              var t = typeof v;\n\n              if (t === \"object\" || t === \"array\" || t === \"function\") {\n                return v.toString();\n              } else {\n                return \"\" + v;\n              }\n            }\n\n            function floatReadValueFromPointer(name, shift) {\n              switch (shift) {\n                case 2:\n                  return function (pointer) {\n                    return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n                  };\n\n                case 3:\n                  return function (pointer) {\n                    return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown float type: \" + name);\n              }\n            }\n\n            function __embind_register_float(rawType, name, size) {\n              var shift = getShiftFromSize(size);\n              name = readLatin1String(name);\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": function fromWireType(value) {\n                  return value;\n                },\n                \"toWireType\": function toWireType(destructors, value) {\n                  if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n                    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n                  }\n\n                  return value;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n                destructorFunction: null\n              });\n            }\n\n            function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n              var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n              name = readLatin1String(name);\n              rawInvoker = embind__requireFunction(signature, rawInvoker);\n              exposePublicSymbol(name, function () {\n                throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n              }, argCount - 1);\n              whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n                var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n                replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n                return [];\n              });\n            }\n\n            function integerReadValueFromPointer(name, shift, signed) {\n              switch (shift) {\n                case 0:\n                  return signed ? function readS8FromPointer(pointer) {\n                    return HEAP8[pointer];\n                  } : function readU8FromPointer(pointer) {\n                    return HEAPU8[pointer];\n                  };\n\n                case 1:\n                  return signed ? function readS16FromPointer(pointer) {\n                    return HEAP16[pointer >> 1];\n                  } : function readU16FromPointer(pointer) {\n                    return HEAPU16[pointer >> 1];\n                  };\n\n                case 2:\n                  return signed ? function readS32FromPointer(pointer) {\n                    return HEAP32[pointer >> 2];\n                  } : function readU32FromPointer(pointer) {\n                    return HEAPU32[pointer >> 2];\n                  };\n\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + name);\n              }\n            }\n\n            function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n              name = readLatin1String(name);\n\n              if (maxRange === -1) {\n                maxRange = 4294967295;\n              }\n\n              var shift = getShiftFromSize(size);\n\n              var fromWireType = function fromWireType(value) {\n                return value;\n              };\n\n              if (minRange === 0) {\n                var bitshift = 32 - 8 * size;\n\n                fromWireType = function fromWireType(value) {\n                  return value << bitshift >>> bitshift;\n                };\n              }\n\n              var isUnsignedType = name.indexOf(\"unsigned\") != -1;\n              registerType(primitiveType, {\n                name: name,\n                \"fromWireType\": fromWireType,\n                \"toWireType\": function toWireType(destructors, value) {\n                  if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n                    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n                  }\n\n                  if (value < minRange || value > maxRange) {\n                    throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n                  }\n\n                  return isUnsignedType ? value >>> 0 : value | 0;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n                destructorFunction: null\n              });\n            }\n\n            function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n              var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n              var TA = typeMapping[dataTypeIndex];\n\n              function decodeMemoryView(handle) {\n                handle = handle >> 2;\n                var heap = HEAPU32;\n                var size = heap[handle];\n                var data = heap[handle + 1];\n                return new TA(buffer, data, size);\n              }\n\n              name = readLatin1String(name);\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": decodeMemoryView,\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": decodeMemoryView\n              }, {\n                ignoreDuplicateRegistrations: true\n              });\n            }\n\n            function __embind_register_std_string(rawType, name) {\n              name = readLatin1String(name);\n              var stdStringIsUTF8 = name === \"std::string\";\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": function fromWireType(value) {\n                  var length = HEAPU32[value >> 2];\n                  var str;\n\n                  if (stdStringIsUTF8) {\n                    var decodeStartPtr = value + 4;\n\n                    for (var i = 0; i <= length; ++i) {\n                      var currentBytePtr = value + 4 + i;\n\n                      if (i == length || HEAPU8[currentBytePtr] == 0) {\n                        var maxRead = currentBytePtr - decodeStartPtr;\n                        var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n\n                        if (str === undefined) {\n                          str = stringSegment;\n                        } else {\n                          str += String.fromCharCode(0);\n                          str += stringSegment;\n                        }\n\n                        decodeStartPtr = currentBytePtr + 1;\n                      }\n                    }\n                  } else {\n                    var a = new Array(length);\n\n                    for (var i = 0; i < length; ++i) {\n                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n                    }\n\n                    str = a.join(\"\");\n                  }\n\n                  _free(value);\n\n                  return str;\n                },\n                \"toWireType\": function toWireType(destructors, value) {\n                  if (value instanceof ArrayBuffer) {\n                    value = new Uint8Array(value);\n                  }\n\n                  var getLength;\n                  var valueIsOfTypeString = typeof value === \"string\";\n\n                  if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n                    throwBindingError(\"Cannot pass non-string to std::string\");\n                  }\n\n                  if (stdStringIsUTF8 && valueIsOfTypeString) {\n                    getLength = function getLength() {\n                      return lengthBytesUTF8(value);\n                    };\n                  } else {\n                    getLength = function getLength() {\n                      return value.length;\n                    };\n                  }\n\n                  var length = getLength();\n\n                  var ptr = _malloc(4 + length + 1);\n\n                  HEAPU32[ptr >> 2] = length;\n\n                  if (stdStringIsUTF8 && valueIsOfTypeString) {\n                    stringToUTF8(value, ptr + 4, length + 1);\n                  } else {\n                    if (valueIsOfTypeString) {\n                      for (var i = 0; i < length; ++i) {\n                        var charCode = value.charCodeAt(i);\n\n                        if (charCode > 255) {\n                          _free(ptr);\n\n                          throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                        }\n\n                        HEAPU8[ptr + 4 + i] = charCode;\n                      }\n                    } else {\n                      for (var i = 0; i < length; ++i) {\n                        HEAPU8[ptr + 4 + i] = value[i];\n                      }\n                    }\n                  }\n\n                  if (destructors !== null) {\n                    destructors.push(_free, ptr);\n                  }\n\n                  return ptr;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function destructorFunction(ptr) {\n                  _free(ptr);\n                }\n              });\n            }\n\n            function __embind_register_std_wstring(rawType, charSize, name) {\n              name = readLatin1String(name);\n              var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n\n              if (charSize === 2) {\n                decodeString = UTF16ToString;\n                encodeString = stringToUTF16;\n                lengthBytesUTF = lengthBytesUTF16;\n\n                getHeap = function getHeap() {\n                  return HEAPU16;\n                };\n\n                shift = 1;\n              } else if (charSize === 4) {\n                decodeString = UTF32ToString;\n                encodeString = stringToUTF32;\n                lengthBytesUTF = lengthBytesUTF32;\n\n                getHeap = function getHeap() {\n                  return HEAPU32;\n                };\n\n                shift = 2;\n              }\n\n              registerType(rawType, {\n                name: name,\n                \"fromWireType\": function fromWireType(value) {\n                  var length = HEAPU32[value >> 2];\n                  var HEAP = getHeap();\n                  var str;\n                  var decodeStartPtr = value + 4;\n\n                  for (var i = 0; i <= length; ++i) {\n                    var currentBytePtr = value + 4 + i * charSize;\n\n                    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n                      var maxReadBytes = currentBytePtr - decodeStartPtr;\n                      var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n\n                      if (str === undefined) {\n                        str = stringSegment;\n                      } else {\n                        str += String.fromCharCode(0);\n                        str += stringSegment;\n                      }\n\n                      decodeStartPtr = currentBytePtr + charSize;\n                    }\n                  }\n\n                  _free(value);\n\n                  return str;\n                },\n                \"toWireType\": function toWireType(destructors, value) {\n                  if (!(typeof value === \"string\")) {\n                    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n                  }\n\n                  var length = lengthBytesUTF(value);\n\n                  var ptr = _malloc(4 + length + charSize);\n\n                  HEAPU32[ptr >> 2] = length >> shift;\n                  encodeString(value, ptr + 4, length + charSize);\n\n                  if (destructors !== null) {\n                    destructors.push(_free, ptr);\n                  }\n\n                  return ptr;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function destructorFunction(ptr) {\n                  _free(ptr);\n                }\n              });\n            }\n\n            function __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n              structRegistrations[rawType] = {\n                name: readLatin1String(name),\n                rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n                rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n                fields: []\n              };\n            }\n\n            function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n              structRegistrations[structType].fields.push({\n                fieldName: readLatin1String(fieldName),\n                getterReturnType: getterReturnType,\n                getter: embind__requireFunction(getterSignature, getter),\n                getterContext: getterContext,\n                setterArgumentType: setterArgumentType,\n                setter: embind__requireFunction(setterSignature, setter),\n                setterContext: setterContext\n              });\n            }\n\n            function __embind_register_void(rawType, name) {\n              name = readLatin1String(name);\n              registerType(rawType, {\n                isVoid: true,\n                name: name,\n                \"argPackAdvance\": 0,\n                \"fromWireType\": function fromWireType() {\n                  return undefined;\n                },\n                \"toWireType\": function toWireType(destructors, o) {\n                  return undefined;\n                }\n              });\n            }\n\n            function __emval_as(handle, returnType, destructorsRef) {\n              handle = requireHandle(handle);\n              returnType = requireRegisteredType(returnType, \"emval::as\");\n              var destructors = [];\n\n              var rd = __emval_register(destructors);\n\n              HEAP32[destructorsRef >> 2] = rd;\n              return returnType[\"toWireType\"](destructors, handle);\n            }\n\n            function __emval_allocateDestructors(destructorsRef) {\n              var destructors = [];\n              HEAP32[destructorsRef >> 2] = __emval_register(destructors);\n              return destructors;\n            }\n\n            var emval_symbols = {};\n\n            function getStringOrSymbol(address) {\n              var symbol = emval_symbols[address];\n\n              if (symbol === undefined) {\n                return readLatin1String(address);\n              } else {\n                return symbol;\n              }\n            }\n\n            var emval_methodCallers = [];\n\n            function __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n              caller = emval_methodCallers[caller];\n              handle = requireHandle(handle);\n              methodName = getStringOrSymbol(methodName);\n              return caller(handle, methodName, __emval_allocateDestructors(destructorsRef), args);\n            }\n\n            function __emval_call_void_method(caller, handle, methodName, args) {\n              caller = emval_methodCallers[caller];\n              handle = requireHandle(handle);\n              methodName = getStringOrSymbol(methodName);\n              caller(handle, methodName, null, args);\n            }\n\n            function __emval_addMethodCaller(caller) {\n              var id = emval_methodCallers.length;\n              emval_methodCallers.push(caller);\n              return id;\n            }\n\n            function __emval_lookupTypes(argCount, argTypes) {\n              var a = new Array(argCount);\n\n              for (var i = 0; i < argCount; ++i) {\n                a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i], \"parameter \" + i);\n              }\n\n              return a;\n            }\n\n            function __emval_get_method_caller(argCount, argTypes) {\n              var types = __emval_lookupTypes(argCount, argTypes);\n\n              var retType = types[0];\n              var signatureName = retType.name + \"_$\" + types.slice(1).map(function (t) {\n                return t.name;\n              }).join(\"_\") + \"$\";\n              var params = [\"retType\"];\n              var args = [retType];\n              var argsList = \"\";\n\n              for (var i = 0; i < argCount - 1; ++i) {\n                argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n                params.push(\"argType\" + i);\n                args.push(types[1 + i]);\n              }\n\n              var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n              var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n              var offset = 0;\n\n              for (var i = 0; i < argCount - 1; ++i) {\n                functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n                offset += types[i + 1][\"argPackAdvance\"];\n              }\n\n              functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n\n              for (var i = 0; i < argCount - 1; ++i) {\n                if (types[i + 1][\"deleteObject\"]) {\n                  functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n                }\n              }\n\n              if (!retType.isVoid) {\n                functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n              }\n\n              functionBody += \"};\\n\";\n              params.push(functionBody);\n              var invokerFunction = new_(Function, params).apply(null, args);\n              return __emval_addMethodCaller(invokerFunction);\n            }\n\n            function __emval_get_module_property(name) {\n              name = getStringOrSymbol(name);\n              return __emval_register(Module[name]);\n            }\n\n            function __emval_get_property(handle, key) {\n              handle = requireHandle(handle);\n              key = requireHandle(key);\n              return __emval_register(handle[key]);\n            }\n\n            function __emval_incref(handle) {\n              if (handle > 4) {\n                emval_handle_array[handle].refcount += 1;\n              }\n            }\n\n            function __emval_new_cstring(v) {\n              return __emval_register(getStringOrSymbol(v));\n            }\n\n            function __emval_run_destructors(handle) {\n              var destructors = emval_handle_array[handle].value;\n              runDestructors(destructors);\n\n              __emval_decref(handle);\n            }\n\n            function __emval_take_value(type, argv) {\n              type = requireRegisteredType(type, \"_emval_take_value\");\n              var v = type[\"readValueFromPointer\"](argv);\n              return __emval_register(v);\n            }\n\n            function _abort() {\n              abort();\n            }\n\n            function emscripten_realloc_buffer(size) {\n              try {\n                wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                return 1;\n              } catch (e) {}\n            }\n\n            function _emscripten_resize_heap(requestedSize) {\n              var oldSize = HEAPU8.length;\n              requestedSize = requestedSize >>> 0;\n              var maxHeapSize = 2147483648;\n\n              if (requestedSize > maxHeapSize) {\n                return false;\n              }\n\n              for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n                var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n                var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n                var replacement = emscripten_realloc_buffer(newSize);\n\n                if (replacement) {\n                  return true;\n                }\n              }\n\n              return false;\n            }\n\n            var SYSCALLS = {\n              mappings: {},\n              buffers: [null, [], []],\n              printChar: function printChar(stream, curr) {\n                var buffer = SYSCALLS.buffers[stream];\n\n                if (curr === 0 || curr === 10) {\n                  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n                  buffer.length = 0;\n                } else {\n                  buffer.push(curr);\n                }\n              },\n              varargs: undefined,\n              get: function get() {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret;\n              },\n              getStr: function getStr(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n              },\n              get64: function get64(low, high) {\n                return low;\n              }\n            };\n\n            function _fd_close(fd) {\n              return 0;\n            }\n\n            function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\n            function _fd_write(fd, iov, iovcnt, pnum) {\n              var num = 0;\n\n              for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAP32[iov + i * 8 >> 2];\n                var len = HEAP32[iov + (i * 8 + 4) >> 2];\n\n                for (var j = 0; j < len; j++) {\n                  SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n                }\n\n                num += len;\n              }\n\n              HEAP32[pnum >> 2] = num;\n              return 0;\n            }\n\n            function _setTempRet0($i) {\n              setTempRet0($i | 0);\n            }\n\n            init_emval();\n            PureVirtualError = Module[\"PureVirtualError\"] = extendError(Error, \"PureVirtualError\");\n            embind_init_charCodes();\n            init_embind();\n            BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n            InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n            init_ClassHandle();\n            init_RegisteredPointer();\n            UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n            var ASSERTIONS = false;\n\n            function intArrayToString(array) {\n              var ret = [];\n\n              for (var i = 0; i < array.length; i++) {\n                var chr = array[i];\n\n                if (chr > 255) {\n                  if (ASSERTIONS) {\n                    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n                  }\n\n                  chr &= 255;\n                }\n\n                ret.push(String.fromCharCode(chr));\n              }\n\n              return ret.join(\"\");\n            }\n\n            var decodeBase64 = typeof atob === \"function\" ? atob : function (input) {\n              var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n              var output = \"\";\n              var chr1, chr2, chr3;\n              var enc1, enc2, enc3, enc4;\n              var i = 0;\n              input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n              do {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n                chr1 = enc1 << 2 | enc2 >> 4;\n                chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n                chr3 = (enc3 & 3) << 6 | enc4;\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                  output = output + String.fromCharCode(chr2);\n                }\n\n                if (enc4 !== 64) {\n                  output = output + String.fromCharCode(chr3);\n                }\n              } while (i < input.length);\n\n              return output;\n            };\n\n            function intArrayFromBase64(s) {\n              if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n                var buf;\n\n                try {\n                  buf = Buffer.from(s, \"base64\");\n                } catch (_) {\n                  buf = new Buffer(s, \"base64\");\n                }\n\n                return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n              }\n\n              try {\n                var decoded = decodeBase64(s);\n                var bytes = new Uint8Array(decoded.length);\n\n                for (var i = 0; i < decoded.length; ++i) {\n                  bytes[i] = decoded.charCodeAt(i);\n                }\n\n                return bytes;\n              } catch (_) {\n                throw new Error(\"Converting base64 string to bytes failed.\");\n              }\n            }\n\n            function tryParseAsDataURI(filename) {\n              if (!isDataURI(filename)) {\n                return;\n              }\n\n              return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n            }\n\n            var asmLibraryArg = {\n              \"o\": __embind_create_inheriting_constructor,\n              \"H\": __embind_finalize_value_object,\n              \"A\": __embind_register_bool,\n              \"c\": __embind_register_class,\n              \"i\": __embind_register_class_class_function,\n              \"f\": __embind_register_class_class_property,\n              \"n\": __embind_register_class_constructor,\n              \"a\": __embind_register_class_function,\n              \"b\": __embind_register_class_property,\n              \"z\": __embind_register_emval,\n              \"k\": __embind_register_enum,\n              \"j\": __embind_register_enum_value,\n              \"q\": __embind_register_float,\n              \"K\": __embind_register_function,\n              \"h\": __embind_register_integer,\n              \"g\": __embind_register_memory_view,\n              \"r\": __embind_register_std_string,\n              \"m\": __embind_register_std_wstring,\n              \"J\": __embind_register_value_object,\n              \"I\": __embind_register_value_object_field,\n              \"B\": __embind_register_void,\n              \"l\": __emval_as,\n              \"G\": __emval_call_method,\n              \"e\": __emval_call_void_method,\n              \"D\": __emval_decref,\n              \"d\": __emval_get_method_caller,\n              \"L\": __emval_get_module_property,\n              \"u\": __emval_get_property,\n              \"C\": __emval_incref,\n              \"E\": __emval_new_cstring,\n              \"F\": __emval_run_destructors,\n              \"t\": __emval_take_value,\n              \"s\": _abort,\n              \"x\": _emscripten_resize_heap,\n              \"y\": _fd_close,\n              \"v\": _fd_seek,\n              \"p\": _fd_write,\n              \"w\": _setTempRet0\n            };\n            var asm = createWasm();\n\n            var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n              return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n            };\n\n            var _malloc = Module[\"_malloc\"] = function () {\n              return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n            };\n\n            var ___getTypeName = Module[\"___getTypeName\"] = function () {\n              return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n            };\n\n            var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function () {\n              return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n            };\n\n            var _free = Module[\"_free\"] = function () {\n              return (_free = Module[\"_free\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n            };\n\n            var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n              return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n            };\n\n            var calledRun;\n\n            function ExitStatus(status) {\n              this.name = \"ExitStatus\";\n              this.message = \"Program terminated with exit(\" + status + \")\";\n              this.status = status;\n            }\n\n            dependenciesFulfilled = function runCaller() {\n              if (!calledRun) run();\n              if (!calledRun) dependenciesFulfilled = runCaller;\n            };\n\n            function run(args) {\n              args = args || arguments_;\n\n              if (runDependencies > 0) {\n                return;\n              }\n\n              preRun();\n\n              if (runDependencies > 0) {\n                return;\n              }\n\n              function doRun() {\n                if (calledRun) return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT) return;\n                initRuntime();\n                preMain();\n                readyPromiseResolve(Module);\n                if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n                postRun();\n              }\n\n              if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function () {\n                  setTimeout(function () {\n                    Module[\"setStatus\"](\"\");\n                  }, 1);\n                  doRun();\n                }, 1);\n              } else {\n                doRun();\n              }\n            }\n\n            Module[\"run\"] = run;\n\n            if (Module[\"preInit\"]) {\n              if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n              while (Module[\"preInit\"].length > 0) {\n                Module[\"preInit\"].pop()();\n              }\n            }\n\n            run();\n            return Rive.ready;\n          };\n        }();\n        /* harmony default export */\n\n\n        var __WEBPACK_DEFAULT_EXPORT__ = Rive;\n        /***/\n      },\n      /* 2 */\n\n      /***/\n      function () {\n        /* (ignored) */\n\n        /***/\n      },\n      /* 3 */\n\n      /***/\n      function () {\n        /* (ignored) */\n\n        /***/\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n      /******/\n\n      /* webpack/runtime/define property getters */\n\n      /******/\n\n\n      (function () {\n        /******/\n        // define getter functions for harmony exports\n\n        /******/\n        __webpack_require__.d = function (exports, definition) {\n          /******/\n          for (var key in definition) {\n            /******/\n            if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n              /******/\n              Object.defineProperty(exports, key, {\n                enumerable: true,\n                get: definition[key]\n              });\n              /******/\n            }\n            /******/\n\n          }\n          /******/\n\n        };\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/hasOwnProperty shorthand */\n\n      /******/\n\n\n      (function () {\n        /******/\n        __webpack_require__.o = function (obj, prop) {\n          return Object.prototype.hasOwnProperty.call(obj, prop);\n        };\n        /******/\n\n      })();\n      /******/\n\n      /******/\n\n      /* webpack/runtime/make namespace object */\n\n      /******/\n\n\n      (function () {\n        /******/\n        // define __esModule on exports\n\n        /******/\n        __webpack_require__.r = function (exports) {\n          /******/\n          if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n            /******/\n            Object.defineProperty(exports, Symbol.toStringTag, {\n              value: 'Module'\n            });\n            /******/\n          }\n          /******/\n\n\n          Object.defineProperty(exports, '__esModule', {\n            value: true\n          });\n          /******/\n        };\n        /******/\n\n      })();\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be in strict mode.\n\n      (function () {\n        \"use strict\";\n\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n\n\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\n          \"Fit\": function Fit() {\n            return (\n              /* binding */\n              _Fit\n            );\n          },\n\n          /* harmony export */\n          \"Alignment\": function Alignment() {\n            return (\n              /* binding */\n              _Alignment\n            );\n          },\n\n          /* harmony export */\n          \"Layout\": function Layout() {\n            return (\n              /* binding */\n              _Layout\n            );\n          },\n\n          /* harmony export */\n          \"RuntimeLoader\": function RuntimeLoader() {\n            return (\n              /* binding */\n              _RuntimeLoader\n            );\n          },\n\n          /* harmony export */\n          \"StateMachineInputType\": function StateMachineInputType() {\n            return (\n              /* binding */\n              _StateMachineInputType\n            );\n          },\n\n          /* harmony export */\n          \"StateMachineInput\": function StateMachineInput() {\n            return (\n              /* binding */\n              _StateMachineInput\n            );\n          },\n\n          /* harmony export */\n          \"EventType\": function EventType() {\n            return (\n              /* binding */\n              _EventType\n            );\n          },\n\n          /* harmony export */\n          \"LoopType\": function LoopType() {\n            return (\n              /* binding */\n              _LoopType\n            );\n          },\n\n          /* harmony export */\n          \"Rive\": function Rive() {\n            return (\n              /* binding */\n              _Rive\n            );\n          },\n\n          /* harmony export */\n          \"Testing\": function Testing() {\n            return (\n              /* binding */\n              _Testing\n            );\n          }\n          /* harmony export */\n\n        });\n        /* harmony import */\n\n\n        var _rive_canvas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\n        var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n\n        var __generator = undefined && undefined.__generator || function (thisArg, body) {\n          var _ = {\n            label: 0,\n            sent: function sent() {\n              if (t[0] & 1) throw t[1];\n              return t[1];\n            },\n            trys: [],\n            ops: []\n          },\n              f,\n              y,\n              t,\n              g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n\n            while (_) {\n              try {\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [op[0] & 2, t.value];\n\n                switch (op[0]) {\n                  case 0:\n                  case 1:\n                    t = op;\n                    break;\n\n                  case 4:\n                    _.label++;\n                    return {\n                      value: op[1],\n                      done: false\n                    };\n\n                  case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [0];\n                    continue;\n\n                  case 7:\n                    op = _.ops.pop();\n\n                    _.trys.pop();\n\n                    continue;\n\n                  default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                      _ = 0;\n                      continue;\n                    }\n\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                      _.label = op[1];\n                      break;\n                    }\n\n                    if (op[0] === 6 && _.label < t[1]) {\n                      _.label = t[1];\n                      t = op;\n                      break;\n                    }\n\n                    if (t && _.label < t[2]) {\n                      _.label = t[2];\n\n                      _.ops.push(op);\n\n                      break;\n                    }\n\n                    if (t[2]) _.ops.pop();\n\n                    _.trys.pop();\n\n                    continue;\n                }\n\n                op = body.call(thisArg, _);\n              } catch (e) {\n                op = [6, e];\n                y = 0;\n              } finally {\n                f = t = 0;\n              }\n            }\n\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        }; // Tracks playback states; numbers map to the runtime's numerical values\n        // i.e. play: 0, pause: 1, stop: 2\n\n\n        var PlaybackState;\n\n        (function (PlaybackState) {\n          PlaybackState[PlaybackState[\"Play\"] = 0] = \"Play\";\n          PlaybackState[PlaybackState[\"Pause\"] = 1] = \"Pause\";\n          PlaybackState[PlaybackState[\"Stop\"] = 2] = \"Stop\";\n        })(PlaybackState || (PlaybackState = {})); // #region layout\n        // Fit options for the canvas\n\n\n        var _Fit;\n\n        (function (Fit) {\n          Fit[\"Cover\"] = \"cover\";\n          Fit[\"Contain\"] = \"contain\";\n          Fit[\"Fill\"] = \"fill\";\n          Fit[\"FitWidth\"] = \"fitWidth\";\n          Fit[\"FitHeight\"] = \"fitHeight\";\n          Fit[\"None\"] = \"none\";\n          Fit[\"ScaleDown\"] = \"scaleDown\";\n        })(_Fit || (_Fit = {})); // Alignment options for the canvas\n\n\n        var _Alignment;\n\n        (function (Alignment) {\n          Alignment[\"Center\"] = \"center\";\n          Alignment[\"TopLeft\"] = \"topLeft\";\n          Alignment[\"TopCenter\"] = \"topCenter\";\n          Alignment[\"TopRight\"] = \"topRight\";\n          Alignment[\"CenterLeft\"] = \"centerLeft\";\n          Alignment[\"CenterRight\"] = \"centerRight\";\n          Alignment[\"BottomLeft\"] = \"bottomLeft\";\n          Alignment[\"BottomCenter\"] = \"bottomCenter\";\n          Alignment[\"BottomRight\"] = \"bottomRight\";\n        })(_Alignment || (_Alignment = {})); // Alignment options for Rive animations in a HTML canvas\n\n\n        var _Layout =\n        /** @class */\n        function () {\n          function Layout(params) {\n            var _a, _b, _c, _d, _e, _f;\n\n            this.fit = (_a = params === null || params === void 0 ? void 0 : params.fit) !== null && _a !== void 0 ? _a : _Fit.Contain;\n            this.alignment = (_b = params === null || params === void 0 ? void 0 : params.alignment) !== null && _b !== void 0 ? _b : _Alignment.Center;\n            this.minX = (_c = params === null || params === void 0 ? void 0 : params.minX) !== null && _c !== void 0 ? _c : 0;\n            this.minY = (_d = params === null || params === void 0 ? void 0 : params.minY) !== null && _d !== void 0 ? _d : 0;\n            this.maxX = (_e = params === null || params === void 0 ? void 0 : params.maxX) !== null && _e !== void 0 ? _e : 0;\n            this.maxY = (_f = params === null || params === void 0 ? void 0 : params.maxY) !== null && _f !== void 0 ? _f : 0;\n          } // Alternative constructor to build a Layout from an interface/object\n\n\n          Layout.new = function (_a) {\n            var fit = _a.fit,\n                alignment = _a.alignment,\n                minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            console.warn('This function is deprecated: please use `new Layout({})` instead');\n            return new Layout({\n              fit: fit,\n              alignment: alignment,\n              minX: minX,\n              minY: minY,\n              maxX: maxX,\n              maxY: maxY\n            });\n          };\n          /**\n           * Makes a copy of the layout, replacing any specified parameters\n           */\n\n\n          Layout.prototype.copyWith = function (_a) {\n            var fit = _a.fit,\n                alignment = _a.alignment,\n                minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            return new Layout({\n              fit: fit !== null && fit !== void 0 ? fit : this.fit,\n              alignment: alignment !== null && alignment !== void 0 ? alignment : this.alignment,\n              minX: minX !== null && minX !== void 0 ? minX : this.minX,\n              minY: minY !== null && minY !== void 0 ? minY : this.minY,\n              maxX: maxX !== null && maxX !== void 0 ? maxX : this.maxX,\n              maxY: maxY !== null && maxY !== void 0 ? maxY : this.maxY\n            });\n          }; // Returns fit for the Wasm runtime format\n\n\n          Layout.prototype.runtimeFit = function (rive) {\n            if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n            var fit;\n            if (this.fit === _Fit.Cover) fit = rive.Fit.cover;else if (this.fit === _Fit.Contain) fit = rive.Fit.contain;else if (this.fit === _Fit.Fill) fit = rive.Fit.fill;else if (this.fit === _Fit.FitWidth) fit = rive.Fit.fitWidth;else if (this.fit === _Fit.FitHeight) fit = rive.Fit.fitHeight;else if (this.fit === _Fit.ScaleDown) fit = rive.Fit.scaleDown;else fit = rive.Fit.none;\n            this.cachedRuntimeFit = fit;\n            return fit;\n          }; // Returns alignment for the Wasm runtime format\n\n\n          Layout.prototype.runtimeAlignment = function (rive) {\n            if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n            var alignment;\n            if (this.alignment === _Alignment.TopLeft) alignment = rive.Alignment.topLeft;else if (this.alignment === _Alignment.TopCenter) alignment = rive.Alignment.topCenter;else if (this.alignment === _Alignment.TopRight) alignment = rive.Alignment.topRight;else if (this.alignment === _Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;else if (this.alignment === _Alignment.CenterRight) alignment = rive.Alignment.centerRight;else if (this.alignment === _Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;else if (this.alignment === _Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;else if (this.alignment === _Alignment.BottomRight) alignment = rive.Alignment.bottomRight;else alignment = rive.Alignment.center;\n            this.cachedRuntimeAlignment = alignment;\n            return alignment;\n          };\n\n          return Layout;\n        }(); // Runtime singleton; use getInstance to provide a callback that returns the\n        // Rive runtime\n\n\n        var _RuntimeLoader =\n        /** @class */\n        function () {\n          // Class is never instantiated\n          function RuntimeLoader() {} // Loads the runtime\n\n\n          RuntimeLoader.loadRuntime = function () {\n            _rive_canvas_js__WEBPACK_IMPORTED_MODULE_0__.default({\n              // Loads Wasm bundle\n              locateFile: function locateFile(_) {\n                return RuntimeLoader.wasmURL;\n              }\n            }).then(function (rive) {\n              var _a;\n\n              RuntimeLoader.runtime = rive; // Fire all the callbacks\n\n              while (RuntimeLoader.callBackQueue.length > 0) {\n                (_a = RuntimeLoader.callBackQueue.shift()) === null || _a === void 0 ? void 0 : _a(RuntimeLoader.runtime);\n              }\n            });\n          }; // Provides a runtime instance via a callback\n\n\n          RuntimeLoader.getInstance = function (callback) {\n            // If it's not loading, start loading runtime\n            if (!RuntimeLoader.isLoading) {\n              RuntimeLoader.isLoading = true;\n              RuntimeLoader.loadRuntime();\n            }\n\n            if (!RuntimeLoader.runtime) {\n              RuntimeLoader.callBackQueue.push(callback);\n            } else {\n              callback(RuntimeLoader.runtime);\n            }\n          }; // Provides a runtime instance via a promise\n\n\n          RuntimeLoader.awaitInstance = function () {\n            return new Promise(function (resolve, reject) {\n              return RuntimeLoader.getInstance(function (rive) {\n                return resolve(rive);\n              });\n            });\n          }; // Manually sets the wasm url\n\n\n          RuntimeLoader.setWasmUrl = function (url) {\n            RuntimeLoader.wasmURL = url;\n          }; // Flag to indicate that loading has started/completed\n\n\n          RuntimeLoader.isLoading = false; // List of callbacks for the runtime that come in while loading\n\n          RuntimeLoader.callBackQueue = []; // Path to the Wasm file; default path works for testing only;\n          // if embedded wasm is used then this is never used.\n\n          RuntimeLoader.wasmURL = 'dist/rive.wasm';\n          return RuntimeLoader;\n        }(); // #endregion\n        // #region animations\n        // Wraps animations and instances from the runtime and keeps track of playback\n        // state\n\n\n        var Animation =\n        /** @class */\n        function () {\n          /**\n           * Constructs a new animation\n           * @constructor\n           * @param {any} animation: runtime animation object\n           * @param {any} instance: runtime animation instance object\n           */\n          function Animation(animation, runtime, playing) {\n            this.animation = animation;\n            this.playing = playing;\n            this.loopCount = 0; // Time to which the animation should move to on the next render\n\n            this.scrubTo = null;\n            this.instance = new runtime.LinearAnimationInstance(animation);\n          }\n\n          Object.defineProperty(Animation.prototype, \"name\", {\n            // Returns the animation's name\n            get: function get() {\n              return this.animation.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"time\", {\n            // Returns the animation's current time\n            get: function get() {\n              return this.instance.time;\n            },\n            // Sets the animation's current time\n            set: function set(value) {\n              this.instance.time = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"loopValue\", {\n            // Returns the animation's loop type\n            get: function get() {\n              return this.animation.loopValue;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Advances the animation by the give time. If the animation needs scrubbing,\n           * time is ignored and the stored scrub value is used.\n           * @param time the time to advance the animation by if no scrubbing required\n           */\n\n          Animation.prototype.advance = function (time) {\n            if (this.scrubTo === null) {\n              this.instance.advance(time);\n            } else {\n              this.instance.time = 0;\n              this.instance.advance(this.scrubTo);\n              this.scrubTo = null;\n            }\n          };\n\n          Object.defineProperty(Animation.prototype, \"needsScrub\", {\n            get: function get() {\n              return this.scrubTo !== null;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Deletes the backing Wasm animation instance; once this is called, this\n           * animation is no more.\n           */\n\n          Animation.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n\n          return Animation;\n        }(); // #endregion\n        // #region state machines\n\n\n        var _StateMachineInputType;\n\n        (function (StateMachineInputType) {\n          StateMachineInputType[StateMachineInputType[\"Number\"] = 56] = \"Number\";\n          StateMachineInputType[StateMachineInputType[\"Trigger\"] = 58] = \"Trigger\";\n          StateMachineInputType[StateMachineInputType[\"Boolean\"] = 59] = \"Boolean\";\n        })(_StateMachineInputType || (_StateMachineInputType = {}));\n        /**\n         * An input for a state machine\n         */\n\n\n        var _StateMachineInput =\n        /** @class */\n        function () {\n          function StateMachineInput(type, runtimeInput) {\n            this.type = type;\n            this.runtimeInput = runtimeInput;\n          }\n\n          Object.defineProperty(StateMachineInput.prototype, \"name\", {\n            /**\n             * Returns the name of the input\n             */\n            get: function get() {\n              return this.runtimeInput.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachineInput.prototype, \"value\", {\n            /**\n             * Returns the current value of the input\n             */\n            get: function get() {\n              return this.runtimeInput.value;\n            },\n\n            /**\n             * Sets the value of the input\n             */\n            set: function set(value) {\n              this.runtimeInput.value = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Fires a trigger; does nothing on Number or Boolean input types\n           */\n\n          StateMachineInput.prototype.fire = function () {\n            if (this.type === _StateMachineInputType.Trigger) {\n              this.runtimeInput.fire();\n            }\n          };\n\n          return StateMachineInput;\n        }();\n\n        var StateMachine =\n        /** @class */\n        function () {\n          /**\n           * @constructor\n           * @param stateMachine runtime state machine object\n           * @param instance runtime state machine instance object\n           */\n          function StateMachine(stateMachine, runtime, playing) {\n            this.stateMachine = stateMachine;\n            this.playing = playing;\n            /**\n             * Caches the inputs from the runtime\n             */\n\n            this.inputs = [];\n            this.instance = new runtime.StateMachineInstance(stateMachine);\n            this.initInputs(runtime);\n          }\n\n          Object.defineProperty(StateMachine.prototype, \"name\", {\n            get: function get() {\n              return this.stateMachine.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachine.prototype, \"statesChanged\", {\n            /**\n             * Returns a list of state names that have changed on this frame\n             */\n            get: function get() {\n              var names = [];\n\n              for (var i = 0; i < this.instance.stateChangedCount(); i++) {\n                names.push(this.instance.stateChangedNameByIndex(i));\n              }\n\n              return names;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Fetches references to the state machine's inputs and caches them\n           * @param runtime an instance of the runtime; needed for the SMIInput types\n           */\n\n          StateMachine.prototype.initInputs = function (runtime) {\n            // Fetch the inputs from the runtime if we don't have them\n            for (var i = 0; i < this.instance.inputCount(); i++) {\n              var input = this.instance.input(i);\n              this.inputs.push(this.mapRuntimeInput(input, runtime));\n            }\n          };\n          /**\n           * Maps a runtime input to it's appropriate type\n           * @param input\n           */\n\n\n          StateMachine.prototype.mapRuntimeInput = function (input, runtime) {\n            if (input.type === runtime.SMIInput.bool) {\n              return new _StateMachineInput(_StateMachineInputType.Boolean, input.asBool());\n            } else if (input.type === runtime.SMIInput.number) {\n              return new _StateMachineInput(_StateMachineInputType.Number, input.asNumber());\n            } else if (input.type === runtime.SMIInput.trigger) {\n              return new _StateMachineInput(_StateMachineInputType.Trigger, input.asTrigger());\n            }\n          };\n          /**\n           * Deletes the backing Wasm state machine instance; once this is called, this\n           * state machine is no more.\n           */\n\n\n          StateMachine.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n\n          return StateMachine;\n        }(); // #endregion\n        // #region animator\n\n        /**\n         * Manages animation\n         */\n\n\n        var Animator =\n        /** @class */\n        function () {\n          /**\n           * Constructs a new animator\n           * @constructor\n           * @param runtime Rive runtime; needed to instance animations & state machines\n           * @param artboard the artboard that holds all animations and state machines\n           * @param animations optional list of animations\n           * @param stateMachines optional list of state machines\n           */\n          function Animator(runtime, artboard, eventManager, animations, stateMachines) {\n            if (animations === void 0) {\n              animations = [];\n            }\n\n            if (stateMachines === void 0) {\n              stateMachines = [];\n            }\n\n            this.runtime = runtime;\n            this.artboard = artboard;\n            this.eventManager = eventManager;\n            this.animations = animations;\n            this.stateMachines = stateMachines;\n          }\n          /**\n           * Adds animations and state machines by their names. If names are shared\n           * between animations & state machines, then the first one found will be\n           * created. Best not to use the same names for these in your Rive file.\n           * @param animatable the name(s) of animations and state machines to add\n           * @returns a list of names of the playing animations and state machines\n           */\n\n\n          Animator.prototype.add = function (animatables, playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n\n            animatables = mapToStringArray(animatables); // If animatables is empty, play or pause everything\n\n            if (animatables.length === 0) {\n              this.animations.forEach(function (a) {\n                return a.playing = playing;\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.playing = playing;\n              });\n            } else {\n              // Play/pause already instanced items, or create new instances\n              var instancedAnimationNames = this.animations.map(function (a) {\n                return a.name;\n              });\n              var instancedMachineNames = this.stateMachines.map(function (m) {\n                return m.name;\n              });\n\n              for (var i in animatables) {\n                var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                var mIndex = instancedMachineNames.indexOf(animatables[i]);\n\n                if (aIndex >= 0 || mIndex >= 0) {\n                  if (aIndex >= 0) {\n                    // Animation is instanced, play/pause it\n                    this.animations[aIndex].playing = playing;\n                  } else {\n                    // State machine is instanced, play/pause it\n                    this.stateMachines[mIndex].playing = playing;\n                  }\n                } else {\n                  // Try to create a new animation instance\n                  var anim = this.artboard.animationByName(animatables[i]);\n\n                  if (anim) {\n                    this.animations.push(new Animation(anim, this.runtime, playing));\n                  } else {\n                    // Try to create a new state machine instance\n                    var sm = this.artboard.stateMachineByName(animatables[i]);\n\n                    if (sm) {\n                      this.stateMachines.push(new StateMachine(sm, this.runtime, playing));\n                    }\n                  }\n                }\n              }\n            } // Fire play/paused events for animations\n\n\n            if (fireEvent) {\n              if (playing) {\n                this.eventManager.fire({\n                  type: _EventType.Play,\n                  data: this.playing\n                });\n              } else {\n                this.eventManager.fire({\n                  type: _EventType.Pause,\n                  data: this.paused\n                });\n              }\n            }\n\n            return playing ? this.playing : this.paused;\n          };\n          /**\n           * Play the named animations/state machines\n           * @param animatables the names of the animations/machines to play; plays all if empty\n           * @returns a list of the playing items\n           */\n\n\n          Animator.prototype.play = function (animatables) {\n            return this.add(animatables, true);\n          };\n          /**\n          * Pauses named animations and state machines, or everything if nothing is\n          * specified\n          * @param animatables names of the animations and state machines to pause\n          * @returns a list of names of the animations and state machines paused\n          */\n\n\n          Animator.prototype.pause = function (animatables) {\n            return this.add(animatables, false);\n          };\n          /**\n           * Set time of named animations\n           * @param animations names of the animations to scrub\n           * @param value time scrub value, a floating point number to which the playhead is jumped\n           * @returns a list of names of the animations that were scrubbed\n           */\n\n\n          Animator.prototype.scrub = function (animatables, value) {\n            var forScrubbing = this.animations.filter(function (a) {\n              return animatables.includes(a.name);\n            });\n            forScrubbing.forEach(function (a) {\n              return a.scrubTo = value;\n            });\n            return forScrubbing.map(function (a) {\n              return a.name;\n            });\n          };\n\n          Object.defineProperty(Animator.prototype, \"playing\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * playing\n             */\n            get: function get() {\n              return this.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"paused\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * paused\n             */\n            get: function get() {\n              return this.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Stops and removes all named animations and state machines\n           * @param animatables animations and state machines to remove\n           * @returns a list of names of removed items\n           */\n\n          Animator.prototype.stop = function (animatables) {\n            var _this = this;\n\n            animatables = mapToStringArray(animatables); // If nothing's specified, wipe them out, all of them\n\n            var removedNames = []; // Stop everything\n\n            if (animatables.length === 0) {\n              removedNames = this.animations.map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.map(function (m) {\n                return m.name;\n              })); // Clean up before emptying the arrays\n\n              this.animations.forEach(function (a) {\n                return a.cleanup();\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.cleanup();\n              }); // Empty out the arrays\n\n              this.animations.splice(0, this.animations.length);\n              this.stateMachines.splice(0, this.stateMachines.length);\n            } else {\n              // Remove only the named animations/state machines\n              var animationsToRemove = this.animations.filter(function (a) {\n                return animatables.includes(a.name);\n              });\n              animationsToRemove.forEach(function (a) {\n                a.cleanup();\n\n                _this.animations.splice(_this.animations.indexOf(a), 1);\n              });\n              var machinesToRemove = this.stateMachines.filter(function (m) {\n                return animatables.includes(m.name);\n              });\n              machinesToRemove.forEach(function (m) {\n                m.cleanup();\n\n                _this.stateMachines.splice(_this.stateMachines.indexOf(m), 1);\n              });\n              removedNames = animationsToRemove.map(function (a) {\n                return a.name;\n              }).concat(machinesToRemove.map(function (m) {\n                return m.name;\n              }));\n            }\n\n            this.eventManager.fire({\n              type: _EventType.Stop,\n              data: removedNames\n            }); // Return the list of animations removed\n\n            return removedNames;\n          };\n\n          Object.defineProperty(Animator.prototype, \"isPlaying\", {\n            /**\n             * Returns true if at least one animation is active\n             */\n            get: function get() {\n              return this.animations.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false) || this.stateMachines.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isPaused\", {\n            /**\n             * Returns true if all animations are paused and there's at least one animation\n             */\n            get: function get() {\n              return !this.isPlaying && (this.animations.length > 0 || this.stateMachines.length > 0);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isStopped\", {\n            /**\n             * Returns true if there are no playing or paused animations/state machines\n             */\n            get: function get() {\n              return this.animations.length === 0 && this.stateMachines.length === 0;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * If there are no animations or state machines, add the first one found\n           * @returns the name of the animation or state machine instanced\n           */\n\n          Animator.prototype.atLeastOne = function (playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n\n            var instancedName;\n\n            if (this.animations.length === 0 && this.stateMachines.length === 0) {\n              if (this.artboard.animationCount() > 0) {\n                // Add the first animation\n                this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n              } else if (this.artboard.stateMachineCount() > 0) {\n                // Add the first state machine\n                this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n              }\n            }\n\n            return instancedName;\n          };\n          /**\n           * Checks if any animations have looped and if so, fire the appropriate event\n           */\n\n\n          Animator.prototype.handleLooping = function () {\n            for (var _i = 0, _a = this.animations.filter(function (a) {\n              return a.playing;\n            }); _i < _a.length; _i++) {\n              var animation = _a[_i]; // Emit if the animation looped\n\n              if (animation.loopValue === 0 && animation.loopCount) {\n                animation.loopCount = 0; // This is a one-shot; if it has ended, delete the instance\n\n                this.stop(animation.name);\n              } else if (animation.loopValue === 1 && animation.loopCount) {\n                this.eventManager.fire({\n                  type: _EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: _LoopType.Loop\n                  }\n                });\n                animation.loopCount = 0;\n              } // Wasm indicates a loop at each time the animation\n              // changes direction, so a full loop/lap occurs every\n              // two loop counts\n              else if (animation.loopValue === 2 && animation.loopCount > 1) {\n                this.eventManager.fire({\n                  type: _EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: _LoopType.PingPong\n                  }\n                });\n                animation.loopCount = 0;\n              }\n            }\n          };\n          /**\n           * Checks if states have changed in state machines and fires a statechange\n           * event\n           */\n\n\n          Animator.prototype.handleStateChanges = function () {\n            var statesChanged = [];\n\n            for (var _i = 0, _a = this.stateMachines.filter(function (sm) {\n              return sm.playing;\n            }); _i < _a.length; _i++) {\n              var stateMachine = _a[_i];\n              statesChanged.push.apply(statesChanged, stateMachine.statesChanged);\n            }\n\n            if (statesChanged.length > 0) {\n              this.eventManager.fire({\n                type: _EventType.StateChange,\n                data: statesChanged\n              });\n            }\n          };\n\n          return Animator;\n        }(); // #endregion\n        // #region events\n\n        /**\n         * Supported event types triggered in Rive\n         */\n\n\n        var _EventType;\n\n        (function (EventType) {\n          EventType[\"Load\"] = \"load\";\n          EventType[\"LoadError\"] = \"loaderror\";\n          EventType[\"Play\"] = \"play\";\n          EventType[\"Pause\"] = \"pause\";\n          EventType[\"Stop\"] = \"stop\";\n          EventType[\"Loop\"] = \"loop\";\n          EventType[\"Draw\"] = \"draw\";\n          EventType[\"StateChange\"] = \"statechange\";\n        })(_EventType || (_EventType = {}));\n        /**\n         * Looping types: one-shot, loop, and ping-pong\n         */\n\n\n        var _LoopType;\n\n        (function (LoopType) {\n          LoopType[\"OneShot\"] = \"oneshot\";\n          LoopType[\"Loop\"] = \"loop\";\n          LoopType[\"PingPong\"] = \"pingpong\"; // has value 2 in runtime\n        })(_LoopType || (_LoopType = {})); // Manages Rive events and listeners\n\n\n        var EventManager =\n        /** @class */\n        function () {\n          function EventManager(listeners) {\n            if (listeners === void 0) {\n              listeners = [];\n            }\n\n            this.listeners = listeners;\n          } // Gets listeners of specified type\n\n\n          EventManager.prototype.getListeners = function (type) {\n            return this.listeners.filter(function (e) {\n              return e.type === type;\n            });\n          }; // Adds a listener\n\n\n          EventManager.prototype.add = function (listener) {\n            if (!this.listeners.includes(listener)) {\n              this.listeners.push(listener);\n            }\n          };\n          /**\n           * Removes a listener\n           * @param listener the listener with the callback to be removed\n           */\n\n\n          EventManager.prototype.remove = function (listener) {\n            // We can't simply look for the listener as it'll be a different instance to\n            // one originally subscribed. Find all the listeners of the right type and\n            // then check their callbacks which should match.\n            for (var i = 0; i < this.listeners.length; i++) {\n              var currentListener = this.listeners[i];\n\n              if (currentListener.type === listener.type) {\n                if (currentListener.callback === listener.callback) {\n                  this.listeners.splice(i, 1);\n                  break;\n                }\n              }\n            }\n          };\n          /**\n           * Clears all listeners of specified type, or every listener if no type is\n           * specified\n           * @param type the type of listeners to clear, or all listeners if not\n           * specified\n           */\n\n\n          EventManager.prototype.removeAll = function (type) {\n            var _this = this;\n\n            if (!type) {\n              this.listeners.splice(0, this.listeners.length);\n            } else {\n              this.listeners.filter(function (l) {\n                return l.type === type;\n              }).forEach(function (l) {\n                return _this.remove(l);\n              });\n            }\n          }; // Fires an event\n\n\n          EventManager.prototype.fire = function (event) {\n            var eventListeners = this.getListeners(event.type);\n            eventListeners.forEach(function (listener) {\n              return listener.callback(event);\n            });\n          };\n\n          return EventManager;\n        }(); // Manages a queue of tasks\n\n\n        var TaskQueueManager =\n        /** @class */\n        function () {\n          function TaskQueueManager(eventManager) {\n            this.eventManager = eventManager;\n            this.queue = [];\n          } // Adds a task top the queue\n\n\n          TaskQueueManager.prototype.add = function (task) {\n            this.queue.push(task);\n          }; // Processes all tasks in the queue\n\n\n          TaskQueueManager.prototype.process = function () {\n            while (this.queue.length > 0) {\n              var task = this.queue.shift();\n              task === null || task === void 0 ? void 0 : task.action();\n\n              if (task === null || task === void 0 ? void 0 : task.event) {\n                this.eventManager.fire(task.event);\n              }\n            }\n          };\n\n          return TaskQueueManager;\n        }();\n\n        var _Rive =\n        /** @class */\n        function () {\n          function Rive(params) {\n            var _a; // Flag to indicate if the layout has changed; used by the renderer to know\n            // when to align\n\n\n            this._updateLayout = true;\n            /**\n             * Flag to active/deactivate renderer\n             */\n\n            this.isRendererActive = true; // Tracks if a Rive file is loaded\n\n            this.loaded = false;\n            /**\n             * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n             * commands (e.g. contents) can be called as soon as the file is loaded.\n             * However, playback commands need to be queued and run in order once initial\n             * animations and autoplay has been sorted out. This applies to play, pause,\n             * and start.\n             */\n\n            this.readyForPlaying = false; // Runtime artboard\n\n            this.artboard = null;\n            /**\n             * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n             */\n\n            this.renderSecondTimer = 0;\n            this.canvas = params.canvas;\n            this.src = params.src;\n            this.buffer = params.buffer;\n            this.layout = (_a = params.layout) !== null && _a !== void 0 ? _a : new _Layout(); // Fetch the 2d context from the canvas\n\n            this.ctx = this.canvas.getContext('2d'); // New event management system\n\n            this.eventManager = new EventManager();\n            if (params.onLoad) this.on(_EventType.Load, params.onLoad);\n            if (params.onLoadError) this.on(_EventType.LoadError, params.onLoadError);\n            if (params.onPlay) this.on(_EventType.Play, params.onPlay);\n            if (params.onPause) this.on(_EventType.Pause, params.onPause);\n            if (params.onStop) this.on(_EventType.Stop, params.onStop);\n            if (params.onLoop) this.on(_EventType.Loop, params.onLoop);\n            if (params.onStateChange) this.on(_EventType.StateChange, params.onStateChange);\n            /**\n             * @deprecated Use camelCase'd versions instead.\n             */\n\n            if (params.onload && !params.onLoad) this.on(_EventType.Load, params.onload);\n            if (params.onloaderror && !params.onLoadError) this.on(_EventType.LoadError, params.onloaderror);\n            if (params.onplay && !params.onPlay) this.on(_EventType.Play, params.onplay);\n            if (params.onpause && !params.onPause) this.on(_EventType.Pause, params.onpause);\n            if (params.onstop && !params.onStop) this.on(_EventType.Stop, params.onstop);\n            if (params.onloop && !params.onLoop) this.on(_EventType.Loop, params.onloop);\n            if (params.onstatechange && !params.onStateChange) this.on(_EventType.StateChange, params.onstatechange); // Hook up the task queue\n\n            this.taskQueue = new TaskQueueManager(this.eventManager);\n            this.init({\n              src: this.src,\n              buffer: this.buffer,\n              autoplay: params.autoplay,\n              animations: params.animations,\n              stateMachines: params.stateMachines,\n              artboard: params.artboard\n            });\n          } // Alternative constructor to build a Rive instance from an interface/object\n\n\n          Rive.new = function (params) {\n            console.warn('This function is deprecated: please use `new Rive({})` instead');\n            return new Rive(params);\n          }; // Initializes the Rive object either from constructor or load()\n\n\n          Rive.prototype.init = function (_a) {\n            var _this = this;\n\n            var src = _a.src,\n                buffer = _a.buffer,\n                animations = _a.animations,\n                stateMachines = _a.stateMachines,\n                artboard = _a.artboard,\n                _b = _a.autoplay,\n                autoplay = _b === void 0 ? false : _b;\n            this.src = src;\n            this.buffer = buffer; // If no source file url specified, it's a bust\n\n            if (!this.src && !this.buffer) {\n              throw new Error(Rive.missingErrorMessage);\n            } // List of animations that should be initialized.\n\n\n            var startingAnimationNames = mapToStringArray(animations); // List of state machines that should be initialized\n\n            var startingStateMachineNames = mapToStringArray(stateMachines); // Ensure loaded is marked as false if loading new file\n\n            this.loaded = false;\n            this.readyForPlaying = false; // Ensure the runtime is loaded\n\n            _RuntimeLoader.awaitInstance().then(function (runtime) {\n              _this.runtime = runtime; // Load Rive data from a source uri or a data buffer\n\n              _this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(function (e) {\n                console.error(e);\n              });\n            }).catch(function (e) {\n              console.error(e);\n            });\n          }; // Initializes runtime with Rive data and preps for playing\n\n\n          Rive.prototype.initData = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            var _a;\n\n            return __awaiter(this, void 0, void 0, function () {\n              var _b, _c, msg;\n\n              return __generator(this, function (_d) {\n                switch (_d.label) {\n                  case 0:\n                    if (!this.src) return [3\n                    /*break*/\n                    , 2];\n                    _b = this;\n                    return [4\n                    /*yield*/\n                    , loadRiveFile(this.src)];\n\n                  case 1:\n                    _b.buffer = _d.sent();\n                    _d.label = 2;\n\n                  case 2:\n                    // Load the Rive file\n                    _c = this;\n                    return [4\n                    /*yield*/\n                    , this.runtime.load(new Uint8Array(this.buffer))];\n\n                  case 3:\n                    // Load the Rive file\n                    _c.file = _d.sent();\n\n                    if (this.file) {\n                      // Initialize and draw frame\n                      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay); // Everything's set up, emit a load event\n\n                      this.loaded = true;\n                      this.eventManager.fire({\n                        type: _EventType.Load,\n                        data: (_a = this.src) !== null && _a !== void 0 ? _a : 'buffer'\n                      }); // Flag ready for playback commands and clear the task queue; this order\n                      // is important or it may infinitely recurse\n\n                      this.readyForPlaying = true;\n                      this.taskQueue.process();\n                      this.drawFrame();\n                      return [2\n                      /*return*/\n                      , Promise.resolve()];\n                    } else {\n                      msg = 'Problem loading file; may be corrupt!';\n                      console.warn(msg);\n                      this.eventManager.fire({\n                        type: _EventType.LoadError,\n                        data: msg\n                      });\n                      return [2\n                      /*return*/\n                      , Promise.reject(msg)];\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }; // Initialize for playback\n\n\n          Rive.prototype.initArtboard = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            // Fetch the artboard\n            var rootArtboard = artboardName ? this.file.artboardByName(artboardName) : this.file.defaultArtboard(); // Check we have a working artboard\n\n            if (!rootArtboard) {\n              var msg = 'Invalid artboard name or no default artboard';\n              console.warn(msg);\n              this.eventManager.fire({\n                type: _EventType.LoadError,\n                data: msg\n              });\n              return;\n            } // Instance the artboard\n\n\n            this.artboard = rootArtboard.instance(); // Check that the artboard has at least 1 animation\n\n            if (this.artboard.animationCount() < 1) {\n              var msg = 'Artboard has no animations';\n              this.eventManager.fire({\n                type: _EventType.LoadError,\n                data: msg\n              });\n              throw msg;\n            } // Initialize the animator\n\n\n            this.animator = new Animator(this.runtime, this.artboard, this.eventManager); // Get the canvas where you want to render the animation and create a renderer\n\n            this.renderer = new this.runtime.CanvasRenderer(this.ctx); // Initialize the animations; as loaded hasn't happened yet, we need to\n            // suppress firing the play/pause events until the load event has fired. To\n            // do this we tell the animator to suppress firing events, and add event\n            // firing to the task queue.\n\n            var instanceNames;\n\n            if (animationNames.length > 0 || stateMachineNames.length > 0) {\n              instanceNames = animationNames.concat(stateMachineNames);\n              this.animator.add(instanceNames, autoplay, false);\n            } else {\n              instanceNames = [this.animator.atLeastOne(autoplay, false)];\n            } // Queue up firing the playback events\n\n\n            this.taskQueue.add({\n              action: function action() {},\n              event: {\n                type: autoplay ? _EventType.Play : _EventType.Pause,\n                data: instanceNames\n              }\n            });\n          }; // Draws the current artboard frame\n\n\n          Rive.prototype.drawFrame = function () {\n            this.startRendering();\n          };\n          /**\n           * Draw rendering loop; renders animation frames at the correct time interval.\n           * @param time the time at which to render a frame\n           */\n\n\n          Rive.prototype.draw = function (time, onSecond) {\n            // Clear the frameRequestId, as we're now rendering a fresh frame\n            this.frameRequestId = null; // On the first pass, make sure lastTime has a valid value\n\n            if (!this.lastRenderTime) {\n              this.lastRenderTime = time;\n            } // Handle the onSecond callback\n\n\n            this.renderSecondTimer += time - this.lastRenderTime;\n\n            if (this.renderSecondTimer > 5000) {\n              this.renderSecondTimer = 0;\n              onSecond === null || onSecond === void 0 ? void 0 : onSecond();\n            } // Calculate the elapsed time between frames in seconds\n\n\n            var elapsedTime = (time - this.lastRenderTime) / 1000;\n            this.lastRenderTime = time; // Advance non-paused animations by the elapsed number of seconds\n            // Also advance any animations that require scrubbing\n\n            var activeAnimations = this.animator.animations.filter(function (a) {\n              return a.playing || a.needsScrub;\n            }) // The scrubbed animations must be applied first to prevent weird artifacts\n            // if the playing animations conflict with the scrubbed animating attribuates.\n            .sort(function (first, second) {\n              return first.needsScrub ? -1 : 1;\n            });\n\n            for (var _i = 0, activeAnimations_1 = activeAnimations; _i < activeAnimations_1.length; _i++) {\n              var animation = activeAnimations_1[_i];\n              animation.advance(elapsedTime);\n\n              if (animation.instance.didLoop) {\n                animation.loopCount += 1;\n              }\n\n              animation.instance.apply(this.artboard, 1.0);\n            } // Advance non-paused state machines by the elapsed number of seconds\n\n\n            var activeStateMachines = this.animator.stateMachines.filter(function (a) {\n              return a.playing;\n            });\n\n            for (var _a = 0, activeStateMachines_1 = activeStateMachines; _a < activeStateMachines_1.length; _a++) {\n              var stateMachine = activeStateMachines_1[_a];\n              stateMachine.instance.advance(this.artboard, elapsedTime); // stateMachine.instance.apply(this.artboard);\n            } // Once the animations have been applied to the artboard, advance it\n            // by the elapsed time.\n\n\n            this.artboard.advance(elapsedTime); // Update the renderer alignment if necessary\n\n            this.alignRenderer();\n            this.artboard.draw(this.renderer); // Check for any animations that looped\n\n            this.animator.handleLooping(); // Check for any state machines that had a state change\n\n            this.animator.handleStateChanges(); // Calling requestAnimationFrame will rerun draw() at the correct rate:\n            // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n\n            if (this.animator.isPlaying) {\n              // Request a new rendering frame\n              this.startRendering();\n            } else if (this.animator.isPaused) {\n              // Reset the end time so on playback it starts at the correct frame\n              this.lastRenderTime = 0;\n            } else if (this.animator.isStopped) {\n              // Reset animation instances, artboard and time\n              // TODO: implement this properly when we have instancing\n              // this.initArtboard();\n              // this.drawFrame();\n              this.lastRenderTime = 0;\n            }\n          };\n          /**\n           * Align the renderer\n           */\n\n\n          Rive.prototype.alignRenderer = function () {\n            // Restore from previous save in case a previous align occurred\n            this.ctx.restore(); // Canvas must be wiped to prevent artifacts\n\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); // Now save so that future changes to align can restore\n\n            this.ctx.save(); // Align things up safe in the knowledge we can restore if changed\n\n            this.renderer.align(this._layout.runtimeFit(this.runtime), this._layout.runtimeAlignment(this.runtime), {\n              minX: this._layout.minX,\n              minY: this._layout.minY,\n              maxX: this._layout.maxX,\n              maxY: this._layout.maxY\n            }, this.artboard.bounds);\n          };\n          /**\n           * Cleans up any Wasm-generated objects that need to be manually destroyed:\n           * artboard instances, animation instances, state machine instances.\n           *\n           * Once this is called, things will need to be reinitialized or bad things\n           * might happen.\n           */\n\n\n          Rive.prototype.cleanup = function () {\n            this.artboard.delete(); // TODO: delete animation and state machine instances\n          }; // Plays specified animations; if none specified, it unpauses everything.\n\n\n          Rive.prototype.play = function (animationNames, autoplay) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, queue up the play\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function action() {\n                  return _this.play(animationNames, autoplay);\n                }\n              });\n              return;\n            }\n\n            this.animator.play(animationNames);\n            this.startRendering();\n          }; // Pauses specified animations; if none specified, pauses all.\n\n\n          Rive.prototype.pause = function (animationNames) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function action() {\n                  return _this.pause(animationNames);\n                }\n              });\n              return;\n            }\n\n            this.animator.pause(animationNames);\n          };\n\n          Rive.prototype.scrub = function (animationNames, value) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function action() {\n                  return _this.scrub(animationNames, value);\n                }\n              });\n              return;\n            } // Scrub the animation time; we draw a single frame here so that if\n            // nothing's currently playing, the scrubbed animation is still rendered/\n\n\n            this.animator.scrub(animationNames, value || 0);\n            this.drawFrame();\n          }; // Stops specified animations; if none specifies, stops them all.\n\n\n          Rive.prototype.stop = function (animationNames) {\n            var _this = this;\n\n            animationNames = mapToStringArray(animationNames); // If the file's not loaded, early out, nothing to pause\n\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function action() {\n                  return _this.stop(animationNames);\n                }\n              });\n              return;\n            }\n\n            this.animator.stop(animationNames);\n          };\n          /**\n           * Resets the animation\n           * @param artboard the name of the artboard, or default if none given\n           * @param animations the names of animations for playback\n           * @param stateMachines the names of state machines for playback\n           * @param autoplay whether to autoplay when reset, defaults to false\n           *\n           */\n\n\n          Rive.prototype.reset = function (params) {\n            var _a; // Get the current artboard, animations, state machines, and playback states\n\n\n            var artBoardName = params === null || params === void 0 ? void 0 : params.artboard;\n            var animationNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.animations);\n            var stateMachineNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.stateMachines);\n            var autoplay = (_a = params === null || params === void 0 ? void 0 : params.autoplay) !== null && _a !== void 0 ? _a : false; // Stop everything and clean up\n\n            this.stop();\n            this.cleanup(); // Reinitialize an artboard instance with the state\n\n            this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n          }; // Loads a new Rive file, keeping listeners in place\n\n\n          Rive.prototype.load = function (params) {\n            // Stop all animations\n            this.stop(); // Reinitialize\n\n            this.init(params);\n          };\n\n          Object.defineProperty(Rive.prototype, \"layout\", {\n            /**\n             * Returns the current layout. Note that layout should be treated as\n             * immutable. If you want to change the layout, create a new one use the\n             * layout setter\n             */\n            get: function get() {\n              return this._layout;\n            },\n            // Sets a new layout\n            set: function set(layout) {\n              this._layout = layout; // If the maxX or maxY are 0, then set them to the canvas width and height\n\n              if (!layout.maxX || !layout.maxY) {\n                this.resizeToCanvas();\n              }\n\n              if (this.loaded && !this.animator.isPlaying) {\n                this.drawFrame();\n              }\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Sets the layout bounds to the current canvas size; this is typically called\n           * when the canvas is resized\n           */\n\n          Rive.prototype.resizeToCanvas = function () {\n            this._layout = this.layout.copyWith({\n              minX: 0,\n              minY: 0,\n              maxX: this.canvas.width,\n              maxY: this.canvas.height\n            });\n          };\n\n          Object.defineProperty(Rive.prototype, \"source\", {\n            // Returns the animation source, which may be undefined\n            get: function get() {\n              return this.src;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"activeArtboard\", {\n            /**\n             * Returns the name of the active artboard\n             */\n            get: function get() {\n              return this.artboard.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"animationNames\", {\n            // Returns a list of animation names on the chosen artboard\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              var animationNames = [];\n\n              for (var i = 0; i < this.artboard.animationCount(); i++) {\n                animationNames.push(this.artboard.animationByIndex(i).name);\n              }\n\n              return animationNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"stateMachineNames\", {\n            /**\n             * Returns a list of state machine names from the current artboard\n             */\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              var stateMachineNames = [];\n\n              for (var i = 0; i < this.artboard.stateMachineCount(); i++) {\n                stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n              }\n\n              return stateMachineNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Returns the inputs for the specified instanced state machine, or an empty\n           * list if the name is invalid or the state machine is not instanced\n           * @param name the state machine name\n           * @returns the inputs for the named state machine\n           */\n\n          Rive.prototype.stateMachineInputs = function (name) {\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.loaded) {\n              return;\n            }\n\n            var stateMachine = this.animator.stateMachines.find(function (m) {\n              return m.name === name;\n            });\n            return stateMachine === null || stateMachine === void 0 ? void 0 : stateMachine.inputs;\n          };\n\n          Object.defineProperty(Rive.prototype, \"playingStateMachineNames\", {\n            // Returns a list of playing machine names\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"playingAnimationNames\", {\n            // Returns a list of playing animation names\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedAnimationNames\", {\n            // Returns a list of paused animation names\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedStateMachineNames\", {\n            /**\n             *  Returns a list of paused machine names\n             * @returns a list of state machine names that are paused\n             */\n            get: function get() {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n\n              return this.animator.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPlaying\", {\n            /**\n             * @returns true if any animation is playing\n             */\n            get: function get() {\n              return this.animator.isPlaying;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPaused\", {\n            /**\n             * @returns true if all instanced animations are paused\n             */\n            get: function get() {\n              return this.animator.isPaused;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isStopped\", {\n            /**\n             * @returns true if no animations are playing or paused\n             */\n            get: function get() {\n              return this.animator.isStopped;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"bounds\", {\n            /**\n             * @returns the bounds of the current artboard, or undefined if the artboard\n             * isn't loaded yet.\n             */\n            get: function get() {\n              return this.artboard ? this.artboard.bounds : undefined;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Subscribe to Rive-generated events\n           * @param type the type of event to subscribe to\n           * @param callback callback to fire when the event occurs\n           */\n\n          Rive.prototype.on = function (type, callback) {\n            this.eventManager.add({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes from a Rive-generated event\n           * @param callback the callback to unsubscribe from\n           */\n\n\n          Rive.prototype.unsubscribe = function (type, callback) {\n            this.eventManager.remove({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes all listeners from an event type, or everything if no type is\n           * given\n           * @param type the type of event to unsubscribe from, or all types if\n           * undefined\n           */\n\n\n          Rive.prototype.unsubscribeAll = function (type) {\n            this.eventManager.removeAll(type);\n          };\n          /**\n           * Stops the rendering loop; this is different from pausing in that it doesn't\n           * change the state of any animation. It stops rendering from occurring. This\n           * is designed for situations such as when Rive isn't visible.\n           *\n           * The only way to start rendering again is to call `startRendering`.\n           * Animations that are marked as playing will start from the position that\n           * they would have been at if rendering had not been stopped.\n           */\n\n\n          Rive.prototype.stopRendering = function () {\n            if (this.loaded && this.frameRequestId) {\n              cancelAnimationFrame(this.frameRequestId);\n              this.frameRequestId = null;\n            }\n          };\n          /**\n           * Starts the rendering loop if it has been previously stopped. If the\n           * renderer is already active, then this will have zero effect.\n           */\n\n\n          Rive.prototype.startRendering = function () {\n            if (this.loaded && !this.frameRequestId) {\n              this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n            }\n          };\n\n          Object.defineProperty(Rive.prototype, \"contents\", {\n            /**\n             * Returns the contents of a Rive file: the artboards, animations, and state machines\n             */\n            get: function get() {\n              if (!this.loaded) {\n                return undefined;\n              }\n\n              var riveContents = {\n                artboards: []\n              };\n\n              for (var i = 0; i < this.file.artboardCount(); i++) {\n                var artboard = this.file.artboardByIndex(i);\n                var artboardContents = {\n                  name: artboard.name,\n                  animations: [],\n                  stateMachines: []\n                };\n\n                for (var j = 0; j < artboard.animationCount(); j++) {\n                  var animation = artboard.animationByIndex(j);\n                  artboardContents.animations.push(animation.name);\n                }\n\n                for (var k = 0; k < artboard.stateMachineCount(); k++) {\n                  var stateMachine = artboard.stateMachineByIndex(k);\n                  var name_1 = stateMachine.name;\n                  var instance = new this.runtime.StateMachineInstance(stateMachine);\n                  var inputContents = [];\n\n                  for (var l = 0; l < instance.inputCount(); l++) {\n                    var input = instance.input(l);\n                    inputContents.push({\n                      name: input.name,\n                      type: input.type\n                    });\n                  }\n\n                  artboardContents.stateMachines.push({\n                    name: name_1,\n                    inputs: inputContents\n                  });\n                }\n\n                riveContents.artboards.push(artboardContents);\n              }\n\n              return riveContents;\n            },\n            enumerable: false,\n            configurable: true\n          }); // Error message for missing source or buffer\n\n          Rive.missingErrorMessage = 'Rive source file or data buffer required';\n          return Rive;\n        }(); // Loads Rive data from a URI via fetch.\n\n\n        var loadRiveFile = function loadRiveFile(src) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var req, res, buffer;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  req = new Request(src);\n                  return [4\n                  /*yield*/\n                  , fetch(req)];\n\n                case 1:\n                  res = _a.sent();\n                  return [4\n                  /*yield*/\n                  , res.arrayBuffer()];\n\n                case 2:\n                  buffer = _a.sent();\n                  return [2\n                  /*return*/\n                  , buffer];\n              }\n            });\n          });\n        }; // #endregion\n        // #region utility functions\n\n        /*\n         * Utility function to ensure an object is a string array\n         */\n\n\n        var mapToStringArray = function mapToStringArray(obj) {\n          if (typeof obj === 'string') {\n            return [obj];\n          } else if (obj instanceof Array) {\n            return obj;\n          } // If obj is undefined, return empty array\n\n\n          return [];\n        }; // #endregion\n        // #region testing utilities\n        // Exports to only be used for tests\n\n\n        var _Testing = {\n          EventManager: EventManager,\n          TaskQueueManager: TaskQueueManager\n        }; // #endregion\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    }()\n  );\n});"],"names":["factory","__webpack_modules__","__unused_webpack_module","__webpack_exports__","r","d","__WEBPACK_DEFAULT_EXPORT__","_scriptDir","Rive","document","currentScript","src","undefined","readyPromiseResolve","readyPromiseReject","Module","makeMatrix","m2d","m","DOMMatrix","a","xx","b","xy","c","yx","yy","e","tx","f","ty","Promise","resolve","reject","onRuntimeInitialized","RenderPaintStyle","FillRule","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","evenOdd","CanvasRenderPath","nonZero","extend","__construct","this","__parent","call","_path2D","Path2D","reset","addPath","path","fillRule","_fillRule","moveTo","x","y","lineTo","cubicTo","ox","oy","ix","iy","bezierCurveTo","close","closePath","_colorStyle","value","CanvasRenderPaint","color","_value","thickness","_thickness","join","miter","_join","round","bevel","cap","butt","_cap","square","style","_style","blendMode","srcOver","_blend","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","linearGradient","sx","sy","ex","ey","_gradient","stops","radialGradient","isRadial","addStop","stop","push","completeGradient","draw","ctx","globalCompositeOperation","dx","dy","radius","Math","sqrt","createRadialGradient","createLinearGradient","i","l","length","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","CanvasRenderer","_ctx","save","restore","transform","matrix","drawPath","paint","clipPath","clip","renderFactory","makeRenderPaint","makeRenderPath","key","moduleOverrides","hasOwnProperty","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","dirname","__dirname","filename","binary","ret","tryParseAsDataURI","toString","buffer","Uint8Array","assert","replace","slice","ExitStatus","abort","read","data","intArrayToString","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","onload","onerror","status","out","bind","wasmBinary","wasmMemory","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","callbacks","func","arg","get","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","emval_free_list","emval_handle_array","count_emval_handles","count","get_first_emval","init_emval","__emval_register","handle","pop","refcount","extendError","baseErrorType","errorName","errorClass","message","stack","Error","Object","create","constructor","PureVirtualError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","rv","k","deletionQueue","flushPendingDeletes","obj","$$","deleteScheduled","delayFunction","setDelayFunction","fn","init_embind","BindingError","throwBindingError","getBasestPointer","class_","baseClass","upcast","registerInheritedInstance","requireHandle","registeredTypes","getTypeName","type","___getTypeName","_free","requireRegisteredType","rawType","humanName","impl","unregisterInheritedInstance","detachFinalizer","finalizationGroup","runDestructor","smartPtr","smartPtrType","rawDestructor","ptrType","registeredClass","releaseClassHandle","attachFinalizer","FinalizationGroup","iter","result","next","done","register","unregister","__embind_create_inheriting_constructor","constructorName","wrapperType","properties","arraySlice","wrapperPrototype","instancePrototype","baseClassPrototype","baseConstructor","ctor","pureVirtualFunctions","forEach","defineProperty","apply","p","inner","concat","preservePointerOnDelete","defineProperties","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","o","TypeError","destructorFunction","getShiftFromSize","size","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","left","rightClass","right","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","getActualType","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","args","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","fp","UnboundTypeError","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","new_","argumentList","dummy","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","validateThis","this_","__embind_register_class_class_property","rawFieldType","rawFieldPtr","getterSignature","setterSignature","desc","enumerable","configurable","set","v","fieldType","__embind_register_class_constructor","invoker","__embind_register_class_function","context","isPureVirtual","method","className","memberFunction","__embind_register_class_property","__emval_decref","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","integerReadValueFromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_allocateDestructors","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","__emval_call_void_method","__emval_addMethodCaller","__emval_lookupTypes","__emval_get_method_caller","retType","signatureName","params","functionBody","offset","__emval_get_module_property","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","emscripten_realloc_buffer","grow","byteLength","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","min","max","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","j","_setTempRet0","$i","ASSERTIONS","chr","decodeBase64","atob","input","chr1","chr2","chr3","enc2","enc3","enc4","keyStr","charAt","intArrayFromBase64","s","Buffer","from","_","decoded","bytes","calledRun","run","doRun","setTimeout","runCaller","ready","__webpack_module_cache__","moduleId","cachedModule","definition","prop","Symbol","toStringTag","PlaybackState","_Fit","Fit","_Alignment","Alignment","_rive_canvas_js__WEBPACK_IMPORTED_MODULE_0__","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","__generator","g","label","sent","trys","ops","verb","iterator","n","op","_StateMachineInputType","StateMachineInputType","_Layout","Layout","_a","_b","_c","_d","_e","_f","fit","Contain","alignment","Center","minX","minY","maxX","maxY","new","copyWith","runtimeFit","rive","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","_RuntimeLoader","RuntimeLoader","loadRuntime","default","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","setWasmUrl","Animation","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","cleanup","delete","_EventType","EventType","_LoopType","LoopType","_StateMachineInput","StateMachineInput","runtimeInput","fire","Trigger","StateMachine","stateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","mapRuntimeInput","SMIInput","bool","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","Animator","artboard","eventManager","animations","stateMachines","add","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","sm","stateMachineByName","Play","Pause","paused","play","pause","scrub","forScrubbing","filter","includes","_this","removedNames","splice","animationsToRemove","machinesToRemove","Stop","reduce","acc","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","_i","Loop","PingPong","handleStateChanges","statesChanged","StateChange","EventManager","listeners","getListeners","listener","remove","currentListener","removeAll","event","TaskQueueManager","queue","task","action","_Rive","_updateLayout","isRendererActive","loaded","readyForPlaying","renderSecondTimer","canvas","layout","getContext","onLoad","on","Load","onLoadError","LoadError","onPlay","onPause","onStop","onLoop","onStateChange","onloaderror","onplay","onpause","onstop","onloop","onstatechange","taskQueue","init","autoplay","missingErrorMessage","startingAnimationNames","startingStateMachineNames","initData","artboardName","animationNames","stateMachineNames","msg","loadRiveFile","load","initArtboard","drawFrame","instanceNames","rootArtboard","artboardByName","defaultArtboard","animator","renderer","startRendering","onSecond","frameRequestId","lastRenderTime","elapsedTime","activeAnimations_1","needsScrub","sort","first","second","didLoop","activeStateMachines_1","alignRenderer","isPaused","isStopped","clearRect","width","height","align","_layout","bounds","artBoardName","resizeToCanvas","stateMachineInputs","find","unsubscribe","unsubscribeAll","stopRendering","cancelAnimationFrame","requestAnimationFrame","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","name_1","inputContents","req","Request","arrayBuffer","_Testing"],"sourceRoot":""}